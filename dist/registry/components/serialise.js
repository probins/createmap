import{$ as e}from"../../utils.js";import{Feature as t}from"../../deps.js";import o from"../../olMap.js";import r from"../../vectors.js";import a from"./serialise.htm.js";import i from"./component.js";import"./toolbar.js";const l=new i(a);e("#toolbar").appendChild(l.getTemplate("serialise"));let n="GeoJSON";const s=o.get();let c;function m(o,a,i){n=e("#opformat").value;const l=r.getFormat(n),m=r.getLayers().getArray();let p=[];m.forEach((e=>{"saveall"!=o&&e.get("id")!=a||(p=p.concat(e.get("source").getFeatures()))}));const d=e("#geoonly").checked&&"GeoJSON"==n&&1===p.length;function g(e,t,o){const r={decimals:6};t&&(r.featureProjection=s.get("view").getProjection());return o?l.writeGeometry(e[0].getGeometry(),r):l.writeFeatures(e,r)}let f=g(p,!0,d);if(i)if(d){f=g([new t(l.readGeometry(f).simplify(i))],!1,d)}else{let e=[];e=l.readFeatures(f),e.forEach((e=>{e.setGeometry(e.getGeometry().simplify(i))})),f=g(e,!1,d)}e("#serialOP").value=f,c=a}e("#serialise-title").addEventListener("click",(function(){const e=this.nextElementSibling;e.style.display="block"==e.style.display?"none":"block"})),e("#reserialise").onclick=t=>{m(undefined,c,e("#tolerance").value)},e("#download").onclick=t=>{t.target.href="data:"+{GeoJSON:"application/vnd.geo+json",GPX:"application/gpx+xml",KML:"application/vnd.google-earth.kml+xml",mongo:"application/json"}[n]+";charset=utf-8,"+encodeURIComponent(e("#serialOP").value);const o="mongo"==n?"json":n.toLowerCase();t.target.download="myGeoData."+o};export default m;