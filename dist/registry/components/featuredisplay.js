import e from"./featuredisplay.htm.js";import t from"./component.js";import r from"../../olMap.js";import o from"../../select.js";import{getLength as i}from"../../measure.js";import{transformCoords as s}from"../../olUtils.js";import l from"./popup.js";const n=new t(e,"featuredisplay").getTemplate("featuredisplay"),a=l.getOverlay(),p=r.get();o.displayOn((function(e){const t=a.get("element");if(e.selected.length>0){const r=e.selected[0],o=n.querySelector(".featureDisplay").cloneNode(!0);o.querySelector(".featureId").innerHTML=r.getId();const l=r.getProperties();for(const e in l)if(l[e]&&!l[e].$oid&&"geometry"!=e){const t=l[e].$date?new Date(l[e].$date):l[e],r=n.querySelector(".featureAtt").cloneNode(!0);r.innerHTML=e+": "+t,o.querySelector(".featureAtts").appendChild(r)}const d=r.getGeometry();if(d.getType&&"LineString"===d.getType()){const e=s(d,p.get("view").getProjection()),t=i(e);o.querySelector(".featureLenHav").innerHTML=Math.round(.1*t)/100}else o.querySelector(".featureHav").style.display="none";for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(o),t.style.display="block",a.set("position",e.mapBrowserEvent.coordinate)}else{for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none"}}));