{"version":3,"file":"ol.js","sources":["https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/events/Event.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/ObjectEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Disposable.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/array.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/functions.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/obj.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/events/Target.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/events/EventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/events.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Observable.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/util.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Object.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/AssertionError.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/asserts.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Feature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/transform.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/extent/Corner.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/extent/Relationship.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/extent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/math.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/color.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/IconImageCache.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/Property.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/Base.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/EventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/State.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/Layer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/GeometryType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/VectorContext.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/colorlike.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/has.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/dom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/css.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/transform.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj/Units.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj/Projection.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj/epsg3857.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj/epsg4326.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj/projections.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj/transforms.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/sphere.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/string.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/coordinate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/proj.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/Geometry.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/GeometryLayout.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/SimpleGeometry.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/Immediate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/BuilderType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/ImageState.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/vector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/Map.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/Event.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/Composite.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/CollectionEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Collection.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/Group.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/MapEvent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/MapBrowserEvent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/MapBrowserEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/pointer/EventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/MapBrowserEventHandler.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/MapEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/MapProperty.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/structs/PriorityQueue.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/TileState.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/TileQueue.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/ViewHint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/ViewProperty.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/centerconstraint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/resolutionconstraint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/rotationconstraint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/easing.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/closest.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/deflate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/simplify.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/inflate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/area.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/LinearRing.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/Point.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/contains.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/interiorpoint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/segments.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/intersectsextent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/reverse.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/orient.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/Polygon.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/View.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/tilegrid/common.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/size.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/PluggableMap.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control/Control.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control/Attribution.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control/Rotate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control/Zoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control/MousePosition.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/OverlayPositioning.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Overlay.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control/ScaleLine.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/control.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/Property.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/Interaction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/DoubleClickZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/Pointer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/events/condition.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/DragPan.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/DragRotate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/Box.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/DragBox.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/DragZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/events/KeyCode.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/KeyboardPan.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/KeyboardZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Kinetic.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/MouseWheelZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/PinchRotate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/PinchZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/Circle.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/interpolate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/length.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/LineString.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/MultiLineString.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/MultiPoint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/MultiPolygon.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/center.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Image.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/RegularShape.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Circle.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Fill.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Stroke.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Style.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/BaseVector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/Instruction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/Builder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/PolygonBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/TextPlacement.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/straightchunk.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/TextBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/BuilderGroup.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/ImageBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/LineStringBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/Layer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/canvas/Layer.js","https://jspm.dev/npm:rbush@3.0.1!cjs","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/flat/textpath.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/Executor.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/ExecutorGroup.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/IconAnchorUnits.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/IconOrigin.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Image.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/IconImage.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Icon.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/style/Text.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/canvas/VectorLayer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/render/canvas/hitdetect.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/Vector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/structs/RBush.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/Source.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/VectorEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/loadingstrategy.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/FormatType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/featureloader.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/Vector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/Draw.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/Modify.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction/Select.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Map.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/interaction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/geom/GeometryCollection.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/Feature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/JSONFeature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/GeoJSON.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/xml.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/XMLFeature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/xsd.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/GPX.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/format/KML.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/TileProperty.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/BaseTile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/TileRange.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/renderer/canvas/TileLayer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/layer/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/ImageTile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/reproj/Triangulation.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/common.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/reproj.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/reproj/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/reproj/common.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/tilecoord.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/TileCache.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/structs/LRUCache.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/TileEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/tilegrid/TileGrid.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/tilegrid.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/tileurlfunction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/UrlTile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/TileImage.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/BingMaps.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/net.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/WMSServerType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/uri.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/TileWMS.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/WMTSRequestEncoding.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/tilegrid/WMTS.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/WMTS.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.4.3/src/ol/source/XYZ.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setImageStyle(imageStyle, opt_declutterGroup) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n   */\n  setTextStyle(textStyle, opt_declutterGroups) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  const heights = textHeights;\n  return function (fontSpec) {\n    let height = heights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        textHeights[fontSpec] =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!div) {\n          div = document.createElement('div');\n          div.innerHTML = 'M';\n          div.style.margin = '0 !important';\n          div.style.padding = '0 !important';\n          div.style.position = 'absolute !important';\n          div.style.left = '-99999px !important';\n        }\n        div.style.font = fontSpec;\n        document.body.appendChild(div);\n        height = div.offsetHeight;\n        heights[fontSpec] = height;\n        document.body.removeChild(div);\n      }\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (halfSize * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      let vertices = [\n        point[0] - resolution / 2,\n        point[1],\n        point[0] + resolution / 2,\n        point[1],\n        point[0],\n        point[1] - resolution / 2,\n        point[0],\n        point[1] + resolution / 2,\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {renderDeclutterItems} from '../render.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     */\n    this.declutterTree_ = null;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n        return entry.value;\n      });\n    }\n\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              declutteredFeatures\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    frameState.pixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n  return new CanvasImmediateRenderer(\n    event.context,\n    frameState.pixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  const result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n  if (declutterTree) {\n    declutterTree.clear();\n  }\n  const items = frameState.declutterItems;\n  for (let z = items.length - 1; z >= 0; --z) {\n    const item = items[z];\n    const zIndexItems = item.items;\n    for (let i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n      declutterTree = zIndexItems[i].renderDeclutter(\n        zIndexItems[i + 1],\n        zIndexItems[i + 2],\n        item.opacity,\n        declutterTree\n      );\n    }\n  }\n  items.length = 0;\n  return declutterTree;\n}\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n    }\n    super.renderFrame(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (\n      !newEvent.propagationStopped &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      this.dragListenerKeys_.push(\n        listen(\n          document,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(\n          document,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_,\n          this\n        ),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (\n        this.element_.getRootNode &&\n        this.element_.getRootNode() !== document\n      ) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (\n      !this.originalPointerMoveEvent_ ||\n      this.originalPointerMoveEvent_.defaultPrevented\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        let minX = extent[0] + viewWidth / 2;\n        let maxX = extent[2] - viewWidth / 2;\n        let minY = extent[1] + viewHeight / 2;\n        let maxY = extent[3] - viewHeight / 2;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/a/1180256/2389327\n  // https://en.wikipedia.org/wiki/Curve_orientation#Orientation_of_a_simple_polygon\n\n  let firstVertexRepeated = true;\n  for (let i = 0; i < stride; ++i) {\n    if (flatCoordinates[offset + i] !== flatCoordinates[end - stride + i]) {\n      firstVertexRepeated = false;\n      break;\n    }\n  }\n  if (firstVertexRepeated) {\n    end -= stride;\n  }\n  const iMinVertex = findCornerVertex(flatCoordinates, offset, end, stride);\n  // Orientation matrix:\n  //     [ 1  xa  ya ]\n  // O = | 1  xb  yb |\n  //     [ 1  xc  yc ]\n  let iPreviousVertex = iMinVertex - stride;\n  if (iPreviousVertex < offset) {\n    iPreviousVertex = end - stride;\n  }\n  let iNextVertex = iMinVertex + stride;\n  if (iNextVertex >= end) {\n    iNextVertex = offset;\n  }\n  const aX = flatCoordinates[iPreviousVertex];\n  const aY = flatCoordinates[iPreviousVertex + 1];\n  const bX = flatCoordinates[iMinVertex];\n  const bY = flatCoordinates[iMinVertex + 1];\n  const cX = flatCoordinates[iNextVertex];\n  const cY = flatCoordinates[iNextVertex + 1];\n  const determinant =\n    bX * cY + aX * bY + aY * cX - (aY * bX + bY * cX + aX * cY);\n\n  return determinant < 0;\n}\n\n// Find vertex along one edge of bounding box.\n// In this case, we find smallest y; in case of tie also smallest x.\nfunction findCornerVertex(flatCoordinates, offset, end, stride) {\n  let iMinVertex = -1;\n  let minY = Infinity;\n  let minXAtMinY = Infinity;\n  for (let i = offset; i < end; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (y > minY) {\n      continue;\n    }\n    if (y == minY) {\n      if (x >= minXAtMinY) {\n        continue;\n      }\n    }\n\n    // Minimum so far.\n    iMinVertex = i;\n    minY = y;\n    minXAtMinY = x;\n  }\n\n  return iMinVertex;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    return new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    const options = assign({size: this.getViewportSize_()}, opt_options || {});\n\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSize_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = [centerX, centerY];\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: this.getConstrainedCenter(center, resolution),\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    // calculate rotated position\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    const resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    const centerX = rotX * cosAngle - rotY * sinAngle;\n    const centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenterInternal([centerX, centerY]);\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  IMAGE_DECODE,\n  PASSIVE_EVENT_LISTENERS,\n} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined\n        ? opt_options.hitTolerance * this.frameState_.pixelRatio\n        : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined\n        ? options.hitTolerance * this.frameState_.pixelRatio\n        : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined\n        ? opt_options.hitTolerance * this.frameState_.pixelRatio\n        : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : document;\n      const target =\n        rootNode === document\n          ? /** @type {Node} */ (originalEvent.target)\n          : /** @type {ShadowRoot} */ (rootNode).elementFromPoint(\n              originalEvent.clientX,\n              originalEvent.clientY\n            );\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === document ? document.documentElement : rootNode).contains(\n          target\n        )\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    const interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget =\n            !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterItems: previousFrameState\n          ? previousFrameState.declutterItems\n          : [],\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.postRenderTimeoutHandle_ = setTimeout(\n      this.handlePostRender.bind(this),\n      0\n    );\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']),\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (\n        !this.overrideCollapsible_ &&\n        source.getAttributionsCollapsible() === false\n      ) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    this.addEventListener(\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_\n    );\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ =\n      options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(\n      COORDINATE_FORMAT\n    ));\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(\n      PROJECTION\n    ));\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.MAP),\n      this.handleMapChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITION),\n      this.handlePositionChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged\n    );\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(\n      Property.MAP\n    ));\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(\n      Property.POSITIONING\n    ));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visisble in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions=} opt_panIntoViewOptions Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n          .getView()\n          .getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options=} opt_options Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(\n      getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_\n    );\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @returns {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position - The position, absolute or relative\n   * @param {number} i - The iterator\n   * @returns {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i - The iterator\n   * @param {number} width - The width the scalebar will currently use\n   * @param {boolean} isLast - Flag indicating if we add the last step text\n   * @param {number} scale - The current scale for the whole scalebar\n   * @param {string} suffix - The suffix for the scale\n   * @returns {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 39.37;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nclass DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    if (\n      this.boxEndCondition_(\n        mapBrowserEvent,\n        this.startPixel_,\n        mapBrowserEvent.pixel\n      )\n    ) {\n      this.onBoxEnd(mapBrowserEvent);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXEND,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    return new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @returns {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    let myEnd = this.coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastXCoord;\n          this.coordinates[myEnd++] = lastYCoord;\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastXCoord;\n      this.coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.MULTI_POINT\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    const extent = geometry.getExtent();\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      extent,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      extent,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n  }\n\n  /**\n   * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    let begin = this.coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let end = 2;\n    let stride = geometry.getStride();\n    let i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        const declutterGroup = this.declutterGroups_\n          ? o === 0\n            ? this.declutterGroups_[0]\n            : [].concat(this.declutterGroups_[0])\n          : null;\n        this.drawChars_(begin, end, declutterGroup);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = null;\n      if (!textState.overflow) {\n        geometryWidths = [];\n      }\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          stride = 2;\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(\n        flatCoordinates,\n        0,\n        end,\n        stride,\n        false,\n        false\n      );\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        this.declutterGroups_,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        this.declutterGroups_,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  drawChars_(begin, end, declutterGroup) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      declutterGroup,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      declutterGroup,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../canvas.js\").DeclutterGroups} declutterGroups Declutter.\n   */\n  setTextStyle(textStyle, declutterGroups) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroups_ = declutterGroups;\n\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  addDeclutter(group) {\n    /** @type {Array<*>} */\n    let declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */ (declutter[0][0])++;\n      } else {\n        declutter = [[1]];\n        this.declutterGroups_ = declutter;\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      this.declutterGroups_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.declutterGroups_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      this.declutterGroups_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.declutterGroups_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroups Declutter.\n   */\n  setImageStyle(imageStyle, declutterGroups) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroups_ = declutterGroups;\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {}\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","var _global = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : global;\n\nvar exports = {};\n!function (t, i) {\n  exports = i();\n}(exports, function () {\n  \"use strict\";\n\n  function t(t, r, e, a, h) {\n    !function t(n, r, e, a, h) {\n      for (; a > e;) {\n        if (a - e > 600) {\n          var o = a - e + 1,\n              s = r - e + 1,\n              l = Math.log(o),\n              f = 0.5 * Math.exp(2 * l / 3),\n              u = 0.5 * Math.sqrt(l * f * (o - f) / o) * (s - o / 2 < 0 ? -1 : 1),\n              m = Math.max(e, Math.floor(r - s * f / o + u)),\n              c = Math.min(a, Math.floor(r + (o - s) * f / o + u));\n          t(n, r, m, c, h);\n        }\n\n        var p = n[r],\n            d = e,\n            x = a;\n\n        for (i(n, e, r), h(n[a], p) > 0 && i(n, e, a); d < x;) {\n          for (i(n, d, x), d++, x--; h(n[d], p) < 0;) d++;\n\n          for (; h(n[x], p) > 0;) x--;\n        }\n\n        0 === h(n[e], p) ? i(n, e, x) : i(n, ++x, a), x <= r && (e = x + 1), r <= x && (a = x - 1);\n      }\n    }(t, r, e || 0, a || t.length - 1, h || n);\n  }\n\n  function i(t, i, n) {\n    var r = t[i];\n    t[i] = t[n], t[n] = r;\n  }\n\n  function n(t, i) {\n    return t < i ? -1 : t > i ? 1 : 0;\n  }\n\n  var r = function (t) {\n    void 0 === t && (t = 9), (this || _global)._maxEntries = Math.max(4, t), (this || _global)._minEntries = Math.max(2, Math.ceil(0.4 * (this || _global)._maxEntries)), this.clear();\n  };\n\n  function e(t, i, n) {\n    if (!n) return i.indexOf(t);\n\n    for (var r = 0; r < i.length; r++) if (n(t, i[r])) return r;\n\n    return -1;\n  }\n\n  function a(t, i) {\n    h(t, 0, t.children.length, i, t);\n  }\n\n  function h(t, i, n, r, e) {\n    e || (e = p(null)), e.minX = 1 / 0, e.minY = 1 / 0, e.maxX = -1 / 0, e.maxY = -1 / 0;\n\n    for (var a = i; a < n; a++) {\n      var h = t.children[a];\n      o(e, t.leaf ? r(h) : h);\n    }\n\n    return e;\n  }\n\n  function o(t, i) {\n    return t.minX = Math.min(t.minX, i.minX), t.minY = Math.min(t.minY, i.minY), t.maxX = Math.max(t.maxX, i.maxX), t.maxY = Math.max(t.maxY, i.maxY), t;\n  }\n\n  function s(t, i) {\n    return t.minX - i.minX;\n  }\n\n  function l(t, i) {\n    return t.minY - i.minY;\n  }\n\n  function f(t) {\n    return (t.maxX - t.minX) * (t.maxY - t.minY);\n  }\n\n  function u(t) {\n    return t.maxX - t.minX + (t.maxY - t.minY);\n  }\n\n  function m(t, i) {\n    return t.minX <= i.minX && t.minY <= i.minY && i.maxX <= t.maxX && i.maxY <= t.maxY;\n  }\n\n  function c(t, i) {\n    return i.minX <= t.maxX && i.minY <= t.maxY && i.maxX >= t.minX && i.maxY >= t.minY;\n  }\n\n  function p(t) {\n    return {\n      children: t,\n      height: 1,\n      leaf: !0,\n      minX: 1 / 0,\n      minY: 1 / 0,\n      maxX: -1 / 0,\n      maxY: -1 / 0\n    };\n  }\n\n  function d(i, n, r, e, a) {\n    for (var h = [n, r]; h.length;) if (!((r = h.pop()) - (n = h.pop()) <= e)) {\n      var o = n + Math.ceil((r - n) / e / 2) * e;\n      t(i, o, n, r, a), h.push(n, o, o, r);\n    }\n  }\n\n  return r.prototype.all = function () {\n    return this._all((this || _global).data, []);\n  }, r.prototype.search = function (t) {\n    var i = (this || _global).data,\n        n = [];\n    if (!c(t, i)) return n;\n\n    for (var r = (this || _global).toBBox, e = []; i;) {\n      for (var a = 0; a < i.children.length; a++) {\n        var h = i.children[a],\n            o = i.leaf ? r(h) : h;\n        c(t, o) && (i.leaf ? n.push(h) : m(t, o) ? this._all(h, n) : e.push(h));\n      }\n\n      i = e.pop();\n    }\n\n    return n;\n  }, r.prototype.collides = function (t) {\n    var i = (this || _global).data;\n    if (!c(t, i)) return !1;\n\n    for (var n = []; i;) {\n      for (var r = 0; r < i.children.length; r++) {\n        var e = i.children[r],\n            a = i.leaf ? this.toBBox(e) : e;\n\n        if (c(t, a)) {\n          if (i.leaf || m(t, a)) return !0;\n          n.push(e);\n        }\n      }\n\n      i = n.pop();\n    }\n\n    return !1;\n  }, r.prototype.load = function (t) {\n    if (!t || !t.length) return this || _global;\n\n    if (t.length < (this || _global)._minEntries) {\n      for (var i = 0; i < t.length; i++) this.insert(t[i]);\n\n      return this || _global;\n    }\n\n    var n = this._build(t.slice(), 0, t.length - 1, 0);\n\n    if ((this || _global).data.children.length) {\n      if ((this || _global).data.height === n.height) this._splitRoot((this || _global).data, n);else {\n        if ((this || _global).data.height < n.height) {\n          var r = (this || _global).data;\n          (this || _global).data = n, n = r;\n        }\n\n        this._insert(n, (this || _global).data.height - n.height - 1, !0);\n      }\n    } else (this || _global).data = n;\n    return this || _global;\n  }, r.prototype.insert = function (t) {\n    return t && this._insert(t, (this || _global).data.height - 1), this || _global;\n  }, r.prototype.clear = function () {\n    return (this || _global).data = p([]), this || _global;\n  }, r.prototype.remove = function (t, i) {\n    if (!t) return this || _global;\n\n    for (var n, r, a, h = (this || _global).data, o = this.toBBox(t), s = [], l = []; h || s.length;) {\n      if (h || (h = s.pop(), r = s[s.length - 1], n = l.pop(), a = !0), h.leaf) {\n        var f = e(t, h.children, i);\n        if (-1 !== f) return h.children.splice(f, 1), s.push(h), this._condense(s), this || _global;\n      }\n\n      a || h.leaf || !m(h, o) ? r ? (n++, h = r.children[n], a = !1) : h = null : (s.push(h), l.push(n), n = 0, r = h, h = h.children[0]);\n    }\n\n    return this || _global;\n  }, r.prototype.toBBox = function (t) {\n    return t;\n  }, r.prototype.compareMinX = function (t, i) {\n    return t.minX - i.minX;\n  }, r.prototype.compareMinY = function (t, i) {\n    return t.minY - i.minY;\n  }, r.prototype.toJSON = function () {\n    return (this || _global).data;\n  }, r.prototype.fromJSON = function (t) {\n    return (this || _global).data = t, this || _global;\n  }, r.prototype._all = function (t, i) {\n    for (var n = []; t;) t.leaf ? i.push.apply(i, t.children) : n.push.apply(n, t.children), t = n.pop();\n\n    return i;\n  }, r.prototype._build = function (t, i, n, r) {\n    var e,\n        h = n - i + 1,\n        o = (this || _global)._maxEntries;\n    if (h <= o) return a(e = p(t.slice(i, n + 1)), (this || _global).toBBox), e;\n    r || (r = Math.ceil(Math.log(h) / Math.log(o)), o = Math.ceil(h / Math.pow(o, r - 1))), (e = p([])).leaf = !1, e.height = r;\n    var s = Math.ceil(h / o),\n        l = s * Math.ceil(Math.sqrt(o));\n    d(t, i, n, l, (this || _global).compareMinX);\n\n    for (var f = i; f <= n; f += l) {\n      var u = Math.min(f + l - 1, n);\n      d(t, f, u, s, (this || _global).compareMinY);\n\n      for (var m = f; m <= u; m += s) {\n        var c = Math.min(m + s - 1, u);\n        e.children.push(this._build(t, m, c, r - 1));\n      }\n    }\n\n    return a(e, (this || _global).toBBox), e;\n  }, r.prototype._chooseSubtree = function (t, i, n, r) {\n    for (; r.push(i), !i.leaf && r.length - 1 !== n;) {\n      for (var e = 1 / 0, a = 1 / 0, h = void 0, o = 0; o < i.children.length; o++) {\n        var s = i.children[o],\n            l = f(s),\n            u = (m = t, c = s, (Math.max(c.maxX, m.maxX) - Math.min(c.minX, m.minX)) * (Math.max(c.maxY, m.maxY) - Math.min(c.minY, m.minY)) - l);\n        u < a ? (a = u, e = l < e ? l : e, h = s) : u === a && l < e && (e = l, h = s);\n      }\n\n      i = h || i.children[0];\n    }\n\n    var m, c;\n    return i;\n  }, r.prototype._insert = function (t, i, n) {\n    var r = n ? t : this.toBBox(t),\n        e = [],\n        a = this._chooseSubtree(r, (this || _global).data, i, e);\n\n    for (a.children.push(t), o(a, r); i >= 0 && e[i].children.length > (this || _global)._maxEntries;) this._split(e, i), i--;\n\n    this._adjustParentBBoxes(r, e, i);\n  }, r.prototype._split = function (t, i) {\n    var n = t[i],\n        r = n.children.length,\n        e = (this || _global)._minEntries;\n\n    this._chooseSplitAxis(n, e, r);\n\n    var h = this._chooseSplitIndex(n, e, r),\n        o = p(n.children.splice(h, n.children.length - h));\n\n    o.height = n.height, o.leaf = n.leaf, a(n, (this || _global).toBBox), a(o, (this || _global).toBBox), i ? t[i - 1].children.push(o) : this._splitRoot(n, o);\n  }, r.prototype._splitRoot = function (t, i) {\n    (this || _global).data = p([t, i]), (this || _global).data.height = t.height + 1, (this || _global).data.leaf = !1, a((this || _global).data, (this || _global).toBBox);\n  }, r.prototype._chooseSplitIndex = function (t, i, n) {\n    for (var r, e, a, o, s, l, u, m = 1 / 0, c = 1 / 0, p = i; p <= n - i; p++) {\n      var d = h(t, 0, p, (this || _global).toBBox),\n          x = h(t, p, n, (this || _global).toBBox),\n          v = (e = d, a = x, o = void 0, s = void 0, l = void 0, u = void 0, o = Math.max(e.minX, a.minX), s = Math.max(e.minY, a.minY), l = Math.min(e.maxX, a.maxX), u = Math.min(e.maxY, a.maxY), Math.max(0, l - o) * Math.max(0, u - s)),\n          M = f(d) + f(x);\n      v < m ? (m = v, r = p, c = M < c ? M : c) : v === m && M < c && (c = M, r = p);\n    }\n\n    return r || n - i;\n  }, r.prototype._chooseSplitAxis = function (t, i, n) {\n    var r = t.leaf ? (this || _global).compareMinX : s,\n        e = t.leaf ? (this || _global).compareMinY : l;\n    this._allDistMargin(t, i, n, r) < this._allDistMargin(t, i, n, e) && t.children.sort(r);\n  }, r.prototype._allDistMargin = function (t, i, n, r) {\n    t.children.sort(r);\n\n    for (var e = (this || _global).toBBox, a = h(t, 0, i, e), s = h(t, n - i, n, e), l = u(a) + u(s), f = i; f < n - i; f++) {\n      var m = t.children[f];\n      o(a, t.leaf ? e(m) : m), l += u(a);\n    }\n\n    for (var c = n - i - 1; c >= i; c--) {\n      var p = t.children[c];\n      o(s, t.leaf ? e(p) : p), l += u(s);\n    }\n\n    return l;\n  }, r.prototype._adjustParentBBoxes = function (t, i, n) {\n    for (var r = n; r >= 0; r--) o(i[r], t);\n  }, r.prototype._condense = function (t) {\n    for (var i = t.length - 1, n = void 0; i >= 0; i--) 0 === t[i].children.length ? i > 0 ? (n = t[i - 1].children).splice(n.indexOf(t[i]), 1) : this.clear() : a(t[i], (this || _global).toBBox);\n  }, r;\n});\nvar exports$1 = exports;\n\nexport default exports$1;\n\n//# sourceMappingURL=npm:rbush@3.0.1!cjs.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  const result = [];\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const rotatedCoordinates = rotate(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      rotation,\n      [flatCoordinates[offset], flatCoordinates[offset + 1]]\n    );\n    reverse =\n      rotatedCoordinates[0] >\n      rotatedCoordinates[rotatedCoordinates.length - stride];\n  } else {\n    reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n  }\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  let angleChanged = false;\n\n  let index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text[index];\n    const charLength = scale * measureAndCacheTextWidth(font, char, cache);\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      angleChanged = angleChanged || delta !== 0;\n      delta +=\n        delta > Math.PI ? -2 * Math.PI : delta < -Math.PI ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result[index] = [x, y, charLength / 2, angle, char];\n    startM += charLength;\n  }\n  return angleChanged\n    ? result\n    : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport RBush from 'rbush/rbush.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {\n  createEmpty,\n  createOrUpdate,\n  getHeight,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {SerializableInstructions} instructions The serializable instructions\n   * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @type {Array<*>}\n     */\n    this.declutterItems = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @param {boolean} declutter Declutter.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n    declutter\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      if (declutter) {\n        context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (fillInstruction[1]);\n      }\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    x,\n    y,\n    imageOrLabel,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    x -= anchorX;\n    y -= anchorY;\n\n    const w =\n      width + originX > imageOrLabel.width\n        ? imageOrLabel.width - originX\n        : width;\n    const h =\n      height + originY > imageOrLabel.height\n        ? imageOrLabel.height - originY\n        : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform = null;\n    if (rotation !== 0) {\n      const centerX = x + anchorX;\n      const centerY = y + anchorY;\n      transform = composeTransform(\n        tmpTransform,\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(tmpTransform, p1);\n      applyTransform(tmpTransform, p2);\n      applyTransform(tmpTransform, p3);\n      applyTransform(tmpTransform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    let renderBufferX = 0;\n    let renderBufferY = 0;\n    if (declutterGroup) {\n      const renderBuffer = this.renderBuffer_;\n      renderBuffer[0] = Math.max(renderBuffer[0], getWidth(tmpExtent));\n      renderBufferX = renderBuffer[0];\n      renderBuffer[1] = Math.max(renderBuffer[1], getHeight(tmpExtent));\n      renderBufferY = renderBuffer[1];\n    }\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * scale[0]) / 2\n      : 0;\n    const intersects =\n      tmpExtent[0] - strokePadding <=\n        (canvas.width + renderBufferX) / contextScale &&\n      tmpExtent[2] + strokePadding >= -renderBufferX / contextScale &&\n      tmpExtent[1] - strokePadding <=\n        (canvas.height + renderBufferY) / contextScale &&\n      tmpExtent[3] + strokePadding >= -renderBufferY / contextScale;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[0] == 1) {\n        return false;\n      }\n      const declutterArgs = intersects\n        ? [\n            context,\n            transform ? transform.slice(0) : null,\n            opacity,\n            imageOrLabel,\n            originX,\n            originY,\n            w,\n            h,\n            x,\n            y,\n            scale,\n            tmpExtent.slice(),\n          ]\n        : null;\n      if (declutterArgs) {\n        if (fillStroke) {\n          declutterArgs.push(\n            fillInstruction,\n            strokeInstruction,\n            p1.slice(0),\n            p2.slice(0),\n            p3.slice(0),\n            p4.slice(0)\n          );\n        }\n        declutterGroup.push(declutterArgs);\n      }\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n          false\n        );\n      }\n      drawImageOrLabel(\n        context,\n        transform,\n        opacity,\n        imageOrLabel,\n        originX,\n        originY,\n        w,\n        h,\n        x,\n        y,\n        scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} opacity Layer opacity.\n   * @param {?} declutterTree Declutter tree.\n   * @return {?} Declutter tree.\n   */\n  renderDeclutter(declutterGroup, feature, opacity, declutterTree) {\n    /** @type {Array<import(\"../../structs/RBush.js\").Entry>} */\n    const boxes = [];\n    for (let i = 1, ii = declutterGroup.length; i < ii; ++i) {\n      const declutterData = declutterGroup[i];\n      const box = declutterData[11];\n      boxes.push({\n        minX: box[0],\n        minY: box[1],\n        maxX: box[2],\n        maxY: box[3],\n        value: feature,\n      });\n    }\n    if (!declutterTree) {\n      declutterTree = new RBush(9);\n    }\n    let collides = false;\n    for (let i = 0, ii = boxes.length; i < ii; ++i) {\n      if (declutterTree.collides(boxes[i])) {\n        collides = true;\n        break;\n      }\n    }\n    if (!collides) {\n      declutterTree.load(boxes);\n      for (let j = 1, jj = declutterGroup.length; j < jj; ++j) {\n        const declutterData = /** @type {Array} */ (declutterGroup[j]);\n        const context = declutterData[0];\n        const currentAlpha = context.globalAlpha;\n        if (currentAlpha !== opacity) {\n          context.globalAlpha = opacity;\n        }\n        if (declutterData.length > 12) {\n          this.replayTextBackground_(\n            declutterData[0],\n            declutterData[14],\n            declutterData[15],\n            declutterData[16],\n            declutterData[17],\n            declutterData[12],\n            declutterData[13],\n            true\n          );\n        }\n        drawImageOrLabel.apply(undefined, declutterData);\n        if (currentAlpha !== opacity) {\n          context.globalAlpha = currentAlpha;\n        }\n      }\n    }\n    declutterGroup.length = 1;\n    return declutterTree;\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    this.declutterItems.length = 0;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      declutterGroup,\n      declutterGroups,\n      image,\n      text,\n      textKey;\n    let strokeKey, fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, instruction[3])\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroups = featureCallback ? null : instruction[6];\n          let height = /** @type {number} */ (instruction[7]);\n          const opacity = /** @type {number} */ (instruction[8]);\n          const originX = /** @type {number} */ (instruction[9]);\n          const originY = /** @type {number} */ (instruction[10]);\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\n          let rotation = /** @type {number} */ (instruction[12]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[13]);\n          let width = /** @type {number} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[7] = height;\n            width = image.width;\n            instruction[14] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          let declutterGroupIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            if (declutterGroups) {\n              const index = Math.floor(declutterGroupIndex);\n              declutterGroup =\n                declutterGroups.length < index + 1\n                  ? [declutterGroups[0][0]]\n                  : declutterGroups[index];\n            }\n            const rendered = this.replayImageOrLabel_(\n              context,\n              contextScale,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              image,\n              anchorX,\n              anchorY,\n              declutterGroup,\n              height,\n              opacity,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              width,\n              padding,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null\n            );\n            if (\n              rendered &&\n              declutterGroup &&\n              declutterGroups[declutterGroups.length - 1] !== declutterGroup\n            ) {\n              declutterGroups.push(declutterGroup);\n            }\n            if (declutterGroup) {\n              if (declutterGroup.length - 1 === declutterGroup[0]) {\n                this.declutterItems.push(this, declutterGroup, feature);\n              }\n              declutterGroupIndex += 1 / declutterGroup[0];\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : instruction[4];\n          const overflow = /** @type {number} */ (instruction[5]);\n          fillKey = /** @type {string} */ (instruction[6]);\n          const maxAngle = /** @type {number} */ (instruction[7]);\n          const measurePixelRatio = /** @type {number} */ (instruction[8]);\n          const offsetY = /** @type {number} */ (instruction[9]);\n          strokeKey = /** @type {string} */ (instruction[10]);\n          const strokeWidth = /** @type {number} */ (instruction[11]);\n          text = /** @type {string} */ (instruction[12]);\n          textKey = /** @type {string} */ (instruction[13]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[14]),\n            /** @type {number} */ (instruction[14]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            if (parts) {\n              let rendered = false;\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  rendered =\n                    this.replayImageOrLabel_(\n                      context,\n                      contextScale,\n                      /** @type {number} */ (part[0]),\n                      /** @type {number} */ (part[1]),\n                      label,\n                      anchorX,\n                      anchorY,\n                      declutterGroup,\n                      label.height,\n                      1,\n                      0,\n                      0,\n                      /** @type {number} */ (part[3]),\n                      pixelRatioScale,\n                      false,\n                      label.width,\n                      defaultPadding,\n                      null,\n                      null\n                    ) || rendered;\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  rendered =\n                    this.replayImageOrLabel_(\n                      context,\n                      contextScale,\n                      /** @type {number} */ (part[0]),\n                      /** @type {number} */ (part[1]),\n                      label,\n                      anchorX,\n                      anchorY,\n                      declutterGroup,\n                      label.height,\n                      1,\n                      0,\n                      0,\n                      /** @type {number} */ (part[3]),\n                      pixelRatioScale,\n                      false,\n                      label.width,\n                      defaultPadding,\n                      null,\n                      null\n                    ) || rendered;\n                }\n              }\n              if (rendered) {\n                this.declutterItems.push(this, declutterGroup, feature);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  execute(context, contextScale, transform, viewRotation, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      const renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          renderBuffer\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    if (!this.hitDetectionContext_) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const mask = getCircleArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0; i < contextSize; i++) {\n        for (let j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              let result;\n              if (\n                !(\n                  declutteredFeatures &&\n                  (builderType == BuilderType.IMAGE ||\n                    builderType == BuilderType.TEXT)\n                ) ||\n                declutteredFeatures.indexOf(feature) !== -1\n              ) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterReplays\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          if (\n            opt_declutterReplays &&\n            (builderType == BuilderType.IMAGE ||\n              builderType == BuilderType.TEXT)\n          ) {\n            const declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.execute(\n              context,\n              contextScale,\n              transform,\n              viewRotation,\n              snapToPixel\n            );\n          }\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]],\n};\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(\n  declutterReplays,\n  context,\n  rotation,\n  opacity,\n  snapToPixel,\n  declutterItems\n) {\n  const zs = Object.keys(declutterReplays)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const executorData = declutterReplays[zs[z].toString()];\n    let currentExecutor;\n    for (let i = 0, ii = executorData.length; i < ii; ) {\n      const executor = executorData[i++];\n      const transform = executorData[i++];\n      executor.execute(context, 1, transform, rotation, snapToPixel);\n      if (executor !== currentExecutor && executor.declutterItems.length > 0) {\n        currentExecutor = executor;\n        declutterItems.push({\n          items: executor.declutterItems,\n          opacity: opacity,\n        });\n      }\n    }\n  }\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    if (this.isTainted_()) {\n      // If reading from the canvas throws a SecurityError the same effect can be\n      // achieved with globalCompositeOperation.\n      // This could be used as the default, but it is not fully supported by all\n      // browsers. E. g. Internet Explorer 11 does not support the multiply\n      // operation and the resulting image shape will be completelly filled with\n      // the provided color.\n      // So this is only used as a fallback. It is still better than having no icon\n      // at all.\n      const c = this.color_;\n      ctx.globalCompositeOperation = 'multiply';\n      ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n      return;\n    }\n\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imgData.data;\n    const r = this.color_[0] / 255.0;\n    const g = this.color_[1] / 255.0;\n    const b = this.color_[2] / 255.0;\n\n    for (let i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ration of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n    const displacement = this.getDisplacement();\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup, {\n  replayDeclutter,\n} from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    if (!replayGroup || replayGroup.isEmpty()) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    const transform = this.getRenderTransform(\n      center,\n      resolution,\n      rotation,\n      pixelRatio,\n      width,\n      height,\n      0\n    );\n    const declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n    replayGroup.execute(\n      context,\n      1,\n      transform,\n      rotation,\n      snapToPixel,\n      undefined,\n      declutterReplays\n    );\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(\n          center,\n          resolution,\n          rotation,\n          pixelRatio,\n          width,\n          height,\n          offsetX\n        );\n        replayGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          snapToPixel,\n          undefined,\n          declutterReplays\n        );\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(\n          center,\n          resolution,\n          rotation,\n          pixelRatio,\n          width,\n          height,\n          offsetX\n        );\n        replayGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          snapToPixel,\n          undefined,\n          declutterReplays\n        );\n        startX -= worldWidth;\n      }\n    }\n    if (declutterReplays) {\n      const viewHints = frameState.viewHints;\n      const hifi = !(\n        viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n      );\n      replayDeclutter(\n        declutterReplays,\n        context,\n        rotation,\n        1,\n        hifi,\n        frameState.declutterItems\n      );\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      function (resolve, reject) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] / 2;\n          const height = size[1] / 2;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              0.5,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      const resolution = frameState.viewState.resolution;\n      const rotation = frameState.viewState.rotation;\n      const layer = this.getLayer();\n      /** @type {!Object<string, boolean>} */\n      const features = {};\n\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function (feature) {\n          const key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback(feature, layer);\n          }\n        },\n        layer.getDeclutter() ? declutteredFeatures : null\n      );\n\n      return result;\n    }\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n      vectorLayer.getDeclutter()\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    const render = function (feature) {\n      let styles;\n      const styleFunction =\n        feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(\n          feature,\n          squaredTolerance,\n          styles,\n          replayGroup,\n          userTransform\n        );\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetet\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    0.5,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            size: image.getSize(),\n            opacity: image.getOpacity(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(\n          geometry,\n          style\n        );\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index =\n      (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush/rbush.js';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\n        'GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true\n      );\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      xhr.withCredentials = withCredentials;\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(\n                xhr.responseText,\n                'application/xml'\n              );\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(\n              this,\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              }),\n              format.readProjection(source)\n            );\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function () {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(\n    url,\n    format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n      const sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(\n          features\n        );\n      }\n    },\n    /* FIXME handle error */ VOID\n  );\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   */\n  constructor(type, opt_feature) {\n    super(type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        this.loader_.call(this, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=,\n *     import(\"../proj/Projection.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, opt_geometry, projection) {\n          const circle = opt_geometry\n            ? /** @type {Circle} */ (opt_geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, opt_geometry, projection) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_\n    );\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType == 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    const circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event.coordinate);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.abortDrawing();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    const projection = event.map.getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = event.map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (\n      geometry.getType() == GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = geometry.getLinearRing(0);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(\n          ring.getFlatCoordinates(),\n          ring.getLayout()\n        );\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(),\n          ring.getFlatCoordinates()\n        );\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 0) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended into\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    let sketchCoords = [];\n    if (mode === Mode.LINE_STRING) {\n      sketchCoords = /** @type {LineCoordType} */ this.sketchCoords_;\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    const ending = sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    // Duplicate last coordinate for sketch drawing\n    this.addToDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n    let angle = opt_angle;\n    if (!opt_angle) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ (coordinates).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (\n    type === GeometryType.LINE_STRING ||\n    type === GeometryType.MULTI_LINE_STRING\n  ) {\n    mode = Mode.LINE_STRING;\n  } else if (\n    type === GeometryType.POLYGON ||\n    type === GeometryType.MULTI_POLYGON\n  ) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return /** @type {!Mode} */ (mode);\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(\n        new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt)\n      );\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    const vertex = evt.coordinate;\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const depth = segmentData.depth;\n      const geometry = segmentData.geometry;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(\n        new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt)\n      );\n      this.modified_ = false;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    const viewExtent = fromUserExtent(\n      createExtent(pixelCoordinate, tempExtent),\n      projection\n    );\n    const buffer = map.getView().getResolution() * this.pixelTolerance_;\n    const box = toUserExtent(\n      bufferExtent(viewExtent, buffer, tempExtent),\n      projection\n    );\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt)\n      );\n      this.modified_ = false;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function (\n      segmentDataMatch\n    ) {\n      if (\n        segmentDataMatch.geometry === geometry &&\n        (depth === undefined ||\n          segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index\n      ) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n          .clone()\n          .transform(userProjection, projection));\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (this\n      .featureLayerAssociation_[getUid(feature)]);\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const key = getUid(feature);\n    const selectInteractions = /** @type {Array<Select>} */ (this.getMap()\n      .getInteractions()\n      .getArray()\n      .filter(function (interaction) {\n        return (\n          interaction instanceof Select &&\n          interaction.getStyle() &&\n          interaction.getFeatures().getArray().indexOf(feature) !== -1\n        );\n      }));\n    if (selectInteractions.length > 0) {\n      feature.setStyle(\n        selectInteractions[selectInteractions.length - 1].getStyle()\n      );\n    } else {\n      feature.setStyle(originalFeatureStyles[key]);\n      delete originalFeatureStyles[key];\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.defaultFeatureProjection = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {includes} from '../array.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readNonNegativeInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [opt_options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readNonNegativeInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (rteValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (rteValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (trkValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (trkValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    const lineString = /** @type {LineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    const multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    const point = /** @type {Point} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {import(\"../style/IconAnchorUnits\").default} xunits\n * @property {number} y\n * @property {import(\"../style/IconAnchorUnits\").default} yunits\n * @property {import(\"../style/IconOrigin.js\").default} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && '#' + styleValue in sharedStyles) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src,\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction.bind(this);\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      imageSmoothing: options.imageSmoothing,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    requestJSONP(\n      url,\n      this.handleImageryMetadataResponse.bind(this),\n      undefined,\n      'jsonp'\n    );\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(\n                tileCoord[0],\n                tileCoord[1],\n                tileCoord[2],\n                quadKeyTileCoord\n              );\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions(\n        function (frameState) {\n          const attributions = [];\n          const viewState = frameState.viewState;\n          const tileGrid = this.getTileGrid();\n          const z = tileGrid.getZForResolution(\n            viewState.resolution,\n            this.zDirection\n          );\n          const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n            viewState.center,\n            z\n          );\n          const zoom = tileCoord[0];\n          resource.imageryProviders.map(function (imageryProvider) {\n            let intersecting = false;\n            const coverageAreas = imageryProvider.coverageAreas;\n            for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n              const coverageArea = coverageAreas[i];\n              if (\n                zoom >= coverageArea.zoomMin &&\n                zoom <= coverageArea.zoomMax\n              ) {\n                const bbox = coverageArea.bbox;\n                const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                const extent = applyTransform(epsg4326Extent, transform);\n                if (intersects(extent, frameState.extent)) {\n                  intersecting = true;\n                  break;\n                }\n              }\n            }\n            if (intersecting) {\n              attributions.push(imageryProvider.attribution);\n            }\n          });\n\n          attributions.push(TOS_ATTRIBUTION);\n          return attributions;\n        }.bind(this)\n      );\n    }\n\n    this.setState(SourceState.READY);\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.indexOf('?') == -1 ? '?' : '&') +\n    (opt_callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options=} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : /** @type {Options} */ ({});\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const dpi = 25.4 / 0.28;\n      const inchesPerMeter = 39.37;\n      baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection =\n    getProjection(\n      code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')\n    ) || getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 =\n          getProjection(\n            supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')\n          ) || getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection =\n      getProjection(\n        code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')\n      ) || getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // substract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    matrix = find(\n      matrixSetObj.TileMatrix,\n      (value) => value.Identifier === selectedMatrixLimit.TileMatrix\n    );\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n\n  const extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (projection.getExtent() === null) {\n    projection.setExtent(extent);\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n"],"names":["BaseEvent","[object Object]","type","this","propagationStopped","target","Disposable","disposed","disposeInternal","numberSafeCompareFunction","a","b","includes","arr","obj","indexOf","linearFindNearest","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","assign","Object","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","Target","opt_target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","call","pr","removeEventListener","undefined","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener","apply","eventsKey","addEventListener","listenOnce","unlistenByKey","Observable","EventTarget","revision_","dispatchEvent","EventType","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","ol_uid","String","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","value","eventType","getChangeEventType","ObjectEventType","opt_silent","notify","set","changeEventTypeCache","AssertionError","code","message","name","assert","assertion","errorCode","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","get","changed","handleGeometryChange_","opt_style","styles","createStyleFunction","id","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","c","d","e","f","toString","join","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","applyTransform","transformFn","opt_stops","width","height","xs","ys","l","_boundingExtentXYs","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","squaredDistance","toRadians","angleInDegrees","PI","modulo","r","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromString","cache","cacheSize","s","color","g","exec","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","split","map","Number","normalize","fromStringInternal_","asArray","getKey","src","crossOrigin","asString","shared","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","hasListener","maxCacheSize","expire","BaseLayer","options","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","opt_array","opt_states","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","array","states","getLayerState","getSource","getState","SourceState","handleSourceChange_","pixel","getFeatures","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","inView","viewState","zoom","VectorContext","feature","renderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","strokeStyle","imageStyle","opt_declutterGroup","textStyle","opt_declutterGroups","asColorLike","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","prototype","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","outerWidth","element","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultLineDash","defaultPadding","checkedFonts","setSize","console","warn","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","font","clearInterval","setInterval","measureTextHeight","div","heights","metrics","measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","measureAndCacheTextWidth","rotateAtOffset","context","offsetX","offsetY","translate","rotate","drawImageOrLabel","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","transform2D","opt_dest","dest","j","anchor","anchorX","anchorY","deltaX","deltaY","k","Units","METERS_PER_UNIT","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","func","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","transforms","add","destination","sourceCode","getCode","destinationCode","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","padNumber","number","opt_precision","numberString","toFixed","decimal","closestOnSegment","segment","start","along","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","wrapX","projection","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","getWorldsAway","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","getMetersPerUnit","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","memoizeOne","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","getRevision","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","closestPointXY","computeExtent","returnOrUpdate","opt_sy","opt_anchor","tolerance","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","composeTransform","SimpleGeometry","layout","GeometryLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","getStrideForLayout","opt_layout","nesting","getLayoutForStride","getStride","CanvasImmediateRenderer","pixelRatio","viewRotation","opt_squaredTolerance","opt_userTransform","context_","pixelRatio_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","pixelCoordinates","localTransform","alpha","centerX","centerY","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveTo","lineTo","closePath","ends","moveToLineTo_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","drawText_","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","getType","GeometryType","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","geometries","getGeometriesArray","simplifyTransformed","drawImages_","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","drawRings_","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","getSize","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageScale","getScaleArray","getRotateWithView","getRotation","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","GEOMETRY_RENDERERS","Point","builderGroup","getImageState","ImageState","imageReplay","getBuilder","BuilderType","addDeclutter","textReplay","drawText","LineString","lineStringReplay","Polygon","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","loading","imageState","unlistenImageChange","load","listenImageChange","renderGeometry","getGeometries","drawCustom","renderFeatureInternal","MapRenderer","map_","declutterTree_","coordinateToPixelTransform","pixelToCoordinateTransform","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","declutteredFeatures","all","entry","tmpCoord","hasRenderer","getWrapX","declutterTree","items","declutterItems","z","item","zIndexItems","renderDeclutter","renderDeclutterItems","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","getMap","display","calculateMatrices2D","dispatchRenderEvent","sort","previousElement","layerIndex","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","scheduleExpireIconCache","getDataAtPixel","Property","CollectionEvent","opt_element","opt_index","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","elem","CollectionEventType","removeAt","insertAt","prev","opt_except","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","getArray","handleLayerChange_","collectionEvent","getLayersArray","pos","getLayerStatesArray","ownLayerState","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","updateActivePointers_","isMouseActionButton_","emulateClick_","button","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","DROP","TileQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","enqueue","tile","hifi","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","easeIn","pow","easeOut","inAndOut","linear","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","linearRingArea","setLayout","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","point1","point2","ret","intersectsLineString","coordinatesExtent","forEachSegment","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","linearRingIsClockwise","firstVertexRepeated","iMinVertex","minXAtMinY","findCornerVertex","iPreviousVertex","iNextVertex","aX","aY","bX","bY","cX","cY","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","linearRingsArea","flatCenter","fromExtent","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","newOptions","getResolution","getZoom","getCenterInternal","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","opt_rotation","opt_size","ViewProperty","opt_hints","calculateExtentInternal","getZoomForResolution","getUpdatedOptions_","enabled","getResolutionForExtentInternal","opt_power","getConstrainedResolution","logPower","nearest","baseLevel","geometryOrExtent","polygonFromExtent","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOnInternal","deltaCoordinates","setCenter","adjustResolutionInternal","isMoving","getInteracting","newResolution","adjustResolution","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","cancelAnimations","opt_duration","opt_resolutionDirection","endInteractionInternal","opt_targetResolution","targetZoom","opt_direction","targetRes","returnValue","coordinatesEqual","num","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","getControls","getInteractions","getLayerGroup","overlay","getOverlays","setTarget","getCoordinateFromPixelInternal","features","forEachFeatureAtPixel","forEachLayerAtPixel","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getView","viewCoordinate","getPixelFromCoordinateInternal","tileSourceKey","tileCenter","tileResolution","wantedTiles","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","tileQueue","hints","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","getLoading","targetElement","getTargetElement","dispose","updateSize","updateViewportSize_","handleViewPropertyChanged_","handleFontsChanged","remove","previousFrameState","hasArea","getHints","usedTiles","MapEventType","handlePostRender","computedStyle","parseFloat","setViewportSize","Control","target_","listenerKeys","getOverlayContainerStopEvent","mapEvent","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","collectSourceAttributions_","handleToggle_","classList","toggle","updateElement_","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","updateHTML_","viewport","handleMouseMove","handleMouseOut","format","html","getCoordinateFormat","Overlay","insertFirst","stopEvent","autoPan","autoPanAnimation","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","updatePixelPosition","getOverlayContainer","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","getPosition","isRendered","setVisible","getPixelFromCoordinate","mapSize","updateRenderedPosition","getOffset","getPositioning","posX","posY","msTransform","LEADING_DIGITS","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","dpi_","dpi","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","scaleBarText","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Interaction","setActive","InteractionProperty","active","zoomByDelta","DoubleClickZoom","delta_","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","adjustCenterInternal","getAngle","centerpx","endInteraction","DragRotate","lastAngle_","getConstraints","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","px","createOrUpdateGeometry","render_","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","DragZoom","out_","out","mapExtent","boxPixelExtent","scaleFromCenter","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","setCenterAndRadius","getRadius","getRadiusSquared_","intersectsCoordinate","interpolatePoint","o","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","flatMidpoint_","flatMidpointRevision_","opt_extrapolate","getCoordinateAt","getLayout","lineStrings","lineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","midpoints","douglasPeuckerArray","intersectsLineStringArray","points","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","interiorPoints","getInteriorPointsOfMultiArray","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getDisplacement","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","setOpacity","setScale","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeWidth","angle0","radiusC","drawHitDetectionCanvas_","CircleStyle","Fill","color_","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","Style","geometryFunction_","defaultGeometryFunction","image","zIndex_","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","concat","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderOrder","styleFunction","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","closed","skipFirst","myEnd","getBufferedMaxExtent","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","builderEnds","builderEnd","appendFlatCoordinates","beginGeometry","builderBegin","builderEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","endGeometry","reverse","instruction","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasPolygonBuilder","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","reverseHitDetectionInstructions","finish","updateFillStyle","updateStrokeStyle","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","declutterGroups_","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","declutterGroups","hitDetectionImage","getHitDetectionImage","origin","getPixelRatio","drawFlatCoordinates_","lastStroke","Text","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","placement","TextPlacement","flatEnd","flatOffset","oo","range","declutterGroup","drawChars_","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","p0","p1","p2","p3","p","strokeKey","textKey","fillKey","baseline","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","group","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","tiles","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","renderIfReadyAndVisible","getLayer","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clip","inverted","dispatchRenderEvent_","renderPixel","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","_global","globalThis","exports$1","u","_maxEntries","_minEntries","leaf","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","drawTextOnPath","startM","rotatedCoordinates","numChars","previousAngle","segmentM","angleChanged","char","charLength","charM","segmentPos","tmpExtent","p4","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","align","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","setStrokeStyle_","contextScale","imageOrLabel","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","renderBufferX","renderBufferY","strokePadding","declutterArgs","replayTextBackground_","repeatSize","boxes","RBush","declutterData","currentAlpha","createLabel","featureCallback","opt_hitExtent","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","declutterGroupIndex","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute_","opt_featureCallback","ORDER","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","contextSize","hitExtent","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","zs","executor","executeHitDetection","opt_builderTypes","opt_declutterReplays","builderTypes","execute","0","listenImage","loadHandler","errorHandler","img","promise","listening","unlisten","then","catch","taintedTestContext","IconImage","unlisten_","imageState_","src_","tainted_","unlistenImage_","dispatchChangeEvent_","replaceColor_","isTainted_","fillRect","handleImageError_","handleImageLoad_","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","getSrc","getImageSize","iconImageSize","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","useContainer","makeScale","canvasTransform","transformToString","preRender","vectorSource","clipped","layerExtent","intersectsExtent","clipUnrotated","getRenderTransform","declutterReplays","getDeclutter","world","zz","executorData","currentExecutor","replayDeclutter","postRender","Promise","resolve","reject","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","originalStyle","setColor","setText","imgContext","setImage","byGeometryType","replace","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","getSquaredRenderTolerance","dirty","userTransform","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","VectorLayer","opt_maxEntries","rbush_","RBush_","items_","extents","uid","bbox","forEach_","getAll","getInExtent","rbush","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","attributionLike","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","sourceOrTile","addFeatures","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","forEachInExtent","forEachFeatureAtCoordinateDirect","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","refresh","removed","setLoader","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","circle","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","move","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","getLinearRing","sketchFeature","abortDrawing_","getCoordinates","ending","sketchFeatures","overlaySource","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","writer","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","removeFeature_","segmentData","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","vertexFeature","removePoint","willModifyFeatures_","vertex","dragSegment","coordinateDistance","setRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestOnSegmentData","insertVertex_","opt_coordinate","sortByDistance","projectedDistanceToSegmentDataSquared","bufferExtent","nodes","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","segments","pointCoordinates","distanceToCenterSquared","distanceToCircumference","squaredDistanceToSegment","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","restorePreviousStyle_","applySelectedStyle_","selectInteractions","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","Map","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","getGeometriesArrayRecursive","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","unlistenGeometriesChange_","clonedGeometries","FeatureFormat","defaultFeatureProjection","setWorldExtent","adaptOptions","transformGeometryWithOptions","write","transformed","equivalentProjection","decimals","JSONFeature","readFeatureFromObject","getObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","readGeometry","setId","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","opt_property","localName","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","xmlSerializer_","document_","implementation","createDocument","XMLFeature","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","string","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","multiLineString","getLineStrings","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX","readExtensions_","readExtensions","extensionsNode","featureReader","handleReadExtensions_","gpx","setAttributeNS","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","getAttribute","hasZ","hasM","applyLayoutOptions","href","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","drawName","multiGeometryPoints","featureStyle","findStyle","styleValue","nameStyle","foundStyle","textOffset","setFont","setFill","setStroke","setOffsetX","setOffsetY","setTextAlign","createNameStyleFunction","createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readNameFromDocument","readNameFromNode","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","readColor","hexColor","readFlatCoordinates","re","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","flatLinearRing","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","test","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","getPolygons","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","getLinearRings","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","TileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","tileState","getUseInterimTilesOnError","getTile","getPreload","setState","isDrawableTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","createTransformString","getContextOptions","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","Tile","interimTile","transition_","transitionStarts_","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","step","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","opt_tileCoord","getKeyZXY","hash","TileCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","value_","key_","newer","older","peekLast","release","fromKey","peekFirstKey","tmpTileCoord","TileGrid","opt_func","opt_strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","fullTileRanges","getForProjection","getDefaultTileGrid","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","createXYZ","xyzOptions","gridOptions","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","containsKey","getResolutions","thisProj","scaleSize","opt_projection","getFullTileRange","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTileUrlFunctions","tileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","TileEventType","pruneExceptNewestZ","setKey","setTileUrlFunction","templates","createFromTemplates","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","newTile","getTileInternal","refreshInterimChain","createTile_","tilegrid","proj","imageTile","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","requestJSONP","handleImageryMetadataResponse","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","setAttributions","getTileGrid","imageryProvider","intersecting","coverageAreas","coverageArea","appendParams","uri","params","keyParams","encodeURIComponent","qs","TileWMS","transparent","params_","v13_","serverType_","tmpExtent_","updateV13_","getKeyForParams_","projectionObj","sourceProjectionObj","tileExtent","bufferSize","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","LAYERS","inchesPerMeter","WMSServerType","getAxisOrientation","version","s1","s2","n1","n2","compareVersions","WMTSTileGrid","matrixIds_","matrixIds","WMTS","requestEncoding","WMTSRequestEncoding","version_","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","getMatrixId","TileCol","TileRow","XYZ"],"mappings":"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"}