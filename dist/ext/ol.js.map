{"version":3,"file":"ol.js","sources":["https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/events/Event.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/ObjectEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Disposable.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/array.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/functions.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/obj.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/events/Target.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/events/EventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/events.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Observable.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/util.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Object.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/AssertionError.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/asserts.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Feature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/transform.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/extent/Corner.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/extent/Relationship.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/extent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/math.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/color.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/IconImageCache.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/Property.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/Base.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/EventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/State.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/Layer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/string.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/coordinate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/Map.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/Event.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/css.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/has.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/dom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/Composite.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/CollectionEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Collection.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/Group.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/MapEvent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/MapBrowserEvent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/MapBrowserEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/pointer/EventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/MapBrowserEventHandler.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/MapEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/MapProperty.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/structs/PriorityQueue.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/TileState.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/TileQueue.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/GeometryType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj/Units.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/ViewHint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/ViewProperty.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj/Projection.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj/epsg3857.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj/epsg4326.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj/projections.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj/transforms.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/sphere.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/proj.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/centerconstraint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/resolutionconstraint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/rotationconstraint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/easing.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/GeometryLayout.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/transform.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/Geometry.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/SimpleGeometry.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/closest.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/deflate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/simplify.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/inflate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/area.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/LinearRing.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/Point.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/contains.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/interiorpoint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/segments.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/intersectsextent.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/reverse.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/orient.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/Polygon.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/View.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/tilegrid/common.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/size.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/PluggableMap.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control/Control.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control/Attribution.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control/Rotate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control/Zoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control/MousePosition.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/OverlayPositioning.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Overlay.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control/ScaleLine.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/control.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/Property.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/Interaction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/DoubleClickZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/Pointer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/events/condition.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/DragPan.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/DragRotate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/Box.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/DragBox.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/DragZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/events/KeyCode.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/KeyboardPan.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/KeyboardZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Kinetic.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/MouseWheelZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/PinchRotate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/PinchZoom.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/FormatType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/Circle.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/interpolate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/length.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/LineString.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/MultiLineString.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/MultiPoint.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/MultiPolygon.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/center.js","https://jspm.dev/npm:rbush@3.0.1!cjs","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/ImageState.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Image.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/colorlike.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/RegularShape.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Circle.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Fill.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Stroke.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Style.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/BaseVector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/Instruction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/VectorContext.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/Builder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/PolygonBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/TextPlacement.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/straightchunk.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/TextBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/BuilderGroup.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/ImageBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/LineStringBuilder.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/Layer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/canvas/Layer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/BuilderType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/flat/textpath.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/Executor.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/ExecutorGroup.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/Immediate.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/IconAnchorUnits.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/IconOrigin.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Image.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/IconImage.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Icon.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/style/Text.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/vector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/canvas/VectorLayer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/render/canvas/hitdetect.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/Vector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/structs/RBush.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/Source.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/VectorEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/loadingstrategy.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/featureloader.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/Vector.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/Draw.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/Modify.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction/Select.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Map.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/interaction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/geom/GeometryCollection.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/Feature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/JSONFeature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/GeoJSON.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/xml.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/XMLFeature.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/xsd.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/GPX.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/format/KML.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/TileProperty.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/BaseTile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/TileRange.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/renderer/canvas/TileLayer.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/layer/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/ImageTile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/reproj/Triangulation.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/common.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/reproj.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/reproj/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/reproj/common.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/tilecoord.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/TileCache.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/structs/LRUCache.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/TileEventType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/tilegrid/TileGrid.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/tilegrid.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/Tile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/tileurlfunction.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/UrlTile.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/TileImage.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/BingMaps.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/net.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/WMSServerType.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/uri.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/TileWMS.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/WMTSRequestEncoding.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/tilegrid/WMTS.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/WMTS.js","https://cdn.jsdelivr.net/gh/openlayers/openlayers@6.5.0/src/ol/source/XYZ.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!div) {\n          div = document.createElement('div');\n          div.innerHTML = 'M';\n          div.style.margin = '0 !important';\n          div.style.padding = '0 !important';\n          div.style.position = 'absolute !important';\n          div.style.left = '-99999px !important';\n        }\n        div.style.font = fontSpec;\n        document.body.appendChild(div);\n        height = div.offsetHeight;\n        document.body.removeChild(div);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.propagationStopped &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (\n      !this.originalPointerMoveEvent_ ||\n      this.originalPointerMoveEvent_.defaultPrevented\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * Padding (in css pixels).\n     * If the map viewport is partially covered with other content (overlays) along\n     * its edges, this setting allows to shift the center of the viewport away from that\n     * content. The order of the values in the array is top, right, bottom, left.\n     * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n     * @type {Array<number>|undefined}\n     * @api\n     */\n    this.padding = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  IMAGE_DECODE,\n  PASSIVE_EVENT_LISTENERS,\n} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    return this.getTargetElement()\n      ? this.getTargetElement().ownerDocument\n      : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target =\n        'host' in rootNode // ShadowRoot\n          ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(\n              originalEvent.clientX,\n              originalEvent.clientY\n            )\n          : /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget =\n            !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']),\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    this.addEventListener(\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_\n    );\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ =\n      options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(\n      COORDINATE_FORMAT\n    ));\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(\n      PROJECTION\n    ));\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.MAP),\n      this.handleMapChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITION),\n      this.handlePositionChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged\n    );\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(\n      Property.MAP\n    ));\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(\n      Property.POSITIONING\n    ));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visisble in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions=} opt_panIntoViewOptions Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n          .getView()\n          .getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\nimport {getChangeEventType} from '../Object.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us',\n};\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options=} opt_options Scale line options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(\n      getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_\n    );\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {import(\"./ScaleLine.js\").Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits =\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= minWidth) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @returns {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale =\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          'class=\"ol-scale-singlebar\" ' +\n          'style=' +\n          '\"width: ' +\n          stepWidth +\n          'px;' +\n          'background-color: ' +\n          backgroundColor +\n          ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {\n          /*render text at the end */\n        }\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText =\n        '<div ' +\n        'class=\"ol-scale-text\" ' +\n        'style=\"width: ' +\n        width +\n        'px;\">' +\n        mapScale +\n        '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container =\n      '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n      '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position - The position, absolute or relative\n   * @param {number} i - The iterator\n   * @returns {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      'style=\"position: ' +\n      position +\n      ';' +\n      'top: ' +\n      top +\n      'px;\"' +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i - The iterator\n   * @param {number} width - The width the scalebar will currently use\n   * @param {boolean} isLast - Flag indicating if we add the last step text\n   * @param {number} scale - The current scale for the whole scalebar\n   * @param {string} suffix - The suffix for the scale\n   * @returns {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      'margin-left: ' +\n      margin +\n      'px;' +\n      'text-align: ' +\n      (i === 0 ? 'left' : 'center') +\n      '; ' +\n      'min-width: ' +\n      minWidth +\n      'px;' +\n      'left: ' +\n      (isLast ? width + 'px' : 'unset') +\n      ';\"' +\n      '>' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 1000 / 25.4;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","var _global = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : global;\n\nvar exports = {};\n!function (t, i) {\n  exports = i();\n}(exports, function () {\n  \"use strict\";\n\n  function t(t, r, e, a, h) {\n    !function t(n, r, e, a, h) {\n      for (; a > e;) {\n        if (a - e > 600) {\n          var o = a - e + 1,\n              s = r - e + 1,\n              l = Math.log(o),\n              f = 0.5 * Math.exp(2 * l / 3),\n              u = 0.5 * Math.sqrt(l * f * (o - f) / o) * (s - o / 2 < 0 ? -1 : 1),\n              m = Math.max(e, Math.floor(r - s * f / o + u)),\n              c = Math.min(a, Math.floor(r + (o - s) * f / o + u));\n          t(n, r, m, c, h);\n        }\n\n        var p = n[r],\n            d = e,\n            x = a;\n\n        for (i(n, e, r), h(n[a], p) > 0 && i(n, e, a); d < x;) {\n          for (i(n, d, x), d++, x--; h(n[d], p) < 0;) d++;\n\n          for (; h(n[x], p) > 0;) x--;\n        }\n\n        0 === h(n[e], p) ? i(n, e, x) : i(n, ++x, a), x <= r && (e = x + 1), r <= x && (a = x - 1);\n      }\n    }(t, r, e || 0, a || t.length - 1, h || n);\n  }\n\n  function i(t, i, n) {\n    var r = t[i];\n    t[i] = t[n], t[n] = r;\n  }\n\n  function n(t, i) {\n    return t < i ? -1 : t > i ? 1 : 0;\n  }\n\n  var r = function (t) {\n    void 0 === t && (t = 9), (this || _global)._maxEntries = Math.max(4, t), (this || _global)._minEntries = Math.max(2, Math.ceil(0.4 * (this || _global)._maxEntries)), this.clear();\n  };\n\n  function e(t, i, n) {\n    if (!n) return i.indexOf(t);\n\n    for (var r = 0; r < i.length; r++) if (n(t, i[r])) return r;\n\n    return -1;\n  }\n\n  function a(t, i) {\n    h(t, 0, t.children.length, i, t);\n  }\n\n  function h(t, i, n, r, e) {\n    e || (e = p(null)), e.minX = 1 / 0, e.minY = 1 / 0, e.maxX = -1 / 0, e.maxY = -1 / 0;\n\n    for (var a = i; a < n; a++) {\n      var h = t.children[a];\n      o(e, t.leaf ? r(h) : h);\n    }\n\n    return e;\n  }\n\n  function o(t, i) {\n    return t.minX = Math.min(t.minX, i.minX), t.minY = Math.min(t.minY, i.minY), t.maxX = Math.max(t.maxX, i.maxX), t.maxY = Math.max(t.maxY, i.maxY), t;\n  }\n\n  function s(t, i) {\n    return t.minX - i.minX;\n  }\n\n  function l(t, i) {\n    return t.minY - i.minY;\n  }\n\n  function f(t) {\n    return (t.maxX - t.minX) * (t.maxY - t.minY);\n  }\n\n  function u(t) {\n    return t.maxX - t.minX + (t.maxY - t.minY);\n  }\n\n  function m(t, i) {\n    return t.minX <= i.minX && t.minY <= i.minY && i.maxX <= t.maxX && i.maxY <= t.maxY;\n  }\n\n  function c(t, i) {\n    return i.minX <= t.maxX && i.minY <= t.maxY && i.maxX >= t.minX && i.maxY >= t.minY;\n  }\n\n  function p(t) {\n    return {\n      children: t,\n      height: 1,\n      leaf: !0,\n      minX: 1 / 0,\n      minY: 1 / 0,\n      maxX: -1 / 0,\n      maxY: -1 / 0\n    };\n  }\n\n  function d(i, n, r, e, a) {\n    for (var h = [n, r]; h.length;) if (!((r = h.pop()) - (n = h.pop()) <= e)) {\n      var o = n + Math.ceil((r - n) / e / 2) * e;\n      t(i, o, n, r, a), h.push(n, o, o, r);\n    }\n  }\n\n  return r.prototype.all = function () {\n    return this._all((this || _global).data, []);\n  }, r.prototype.search = function (t) {\n    var i = (this || _global).data,\n        n = [];\n    if (!c(t, i)) return n;\n\n    for (var r = (this || _global).toBBox, e = []; i;) {\n      for (var a = 0; a < i.children.length; a++) {\n        var h = i.children[a],\n            o = i.leaf ? r(h) : h;\n        c(t, o) && (i.leaf ? n.push(h) : m(t, o) ? this._all(h, n) : e.push(h));\n      }\n\n      i = e.pop();\n    }\n\n    return n;\n  }, r.prototype.collides = function (t) {\n    var i = (this || _global).data;\n    if (!c(t, i)) return !1;\n\n    for (var n = []; i;) {\n      for (var r = 0; r < i.children.length; r++) {\n        var e = i.children[r],\n            a = i.leaf ? this.toBBox(e) : e;\n\n        if (c(t, a)) {\n          if (i.leaf || m(t, a)) return !0;\n          n.push(e);\n        }\n      }\n\n      i = n.pop();\n    }\n\n    return !1;\n  }, r.prototype.load = function (t) {\n    if (!t || !t.length) return this || _global;\n\n    if (t.length < (this || _global)._minEntries) {\n      for (var i = 0; i < t.length; i++) this.insert(t[i]);\n\n      return this || _global;\n    }\n\n    var n = this._build(t.slice(), 0, t.length - 1, 0);\n\n    if ((this || _global).data.children.length) {\n      if ((this || _global).data.height === n.height) this._splitRoot((this || _global).data, n);else {\n        if ((this || _global).data.height < n.height) {\n          var r = (this || _global).data;\n          (this || _global).data = n, n = r;\n        }\n\n        this._insert(n, (this || _global).data.height - n.height - 1, !0);\n      }\n    } else (this || _global).data = n;\n    return this || _global;\n  }, r.prototype.insert = function (t) {\n    return t && this._insert(t, (this || _global).data.height - 1), this || _global;\n  }, r.prototype.clear = function () {\n    return (this || _global).data = p([]), this || _global;\n  }, r.prototype.remove = function (t, i) {\n    if (!t) return this || _global;\n\n    for (var n, r, a, h = (this || _global).data, o = this.toBBox(t), s = [], l = []; h || s.length;) {\n      if (h || (h = s.pop(), r = s[s.length - 1], n = l.pop(), a = !0), h.leaf) {\n        var f = e(t, h.children, i);\n        if (-1 !== f) return h.children.splice(f, 1), s.push(h), this._condense(s), this || _global;\n      }\n\n      a || h.leaf || !m(h, o) ? r ? (n++, h = r.children[n], a = !1) : h = null : (s.push(h), l.push(n), n = 0, r = h, h = h.children[0]);\n    }\n\n    return this || _global;\n  }, r.prototype.toBBox = function (t) {\n    return t;\n  }, r.prototype.compareMinX = function (t, i) {\n    return t.minX - i.minX;\n  }, r.prototype.compareMinY = function (t, i) {\n    return t.minY - i.minY;\n  }, r.prototype.toJSON = function () {\n    return (this || _global).data;\n  }, r.prototype.fromJSON = function (t) {\n    return (this || _global).data = t, this || _global;\n  }, r.prototype._all = function (t, i) {\n    for (var n = []; t;) t.leaf ? i.push.apply(i, t.children) : n.push.apply(n, t.children), t = n.pop();\n\n    return i;\n  }, r.prototype._build = function (t, i, n, r) {\n    var e,\n        h = n - i + 1,\n        o = (this || _global)._maxEntries;\n    if (h <= o) return a(e = p(t.slice(i, n + 1)), (this || _global).toBBox), e;\n    r || (r = Math.ceil(Math.log(h) / Math.log(o)), o = Math.ceil(h / Math.pow(o, r - 1))), (e = p([])).leaf = !1, e.height = r;\n    var s = Math.ceil(h / o),\n        l = s * Math.ceil(Math.sqrt(o));\n    d(t, i, n, l, (this || _global).compareMinX);\n\n    for (var f = i; f <= n; f += l) {\n      var u = Math.min(f + l - 1, n);\n      d(t, f, u, s, (this || _global).compareMinY);\n\n      for (var m = f; m <= u; m += s) {\n        var c = Math.min(m + s - 1, u);\n        e.children.push(this._build(t, m, c, r - 1));\n      }\n    }\n\n    return a(e, (this || _global).toBBox), e;\n  }, r.prototype._chooseSubtree = function (t, i, n, r) {\n    for (; r.push(i), !i.leaf && r.length - 1 !== n;) {\n      for (var e = 1 / 0, a = 1 / 0, h = void 0, o = 0; o < i.children.length; o++) {\n        var s = i.children[o],\n            l = f(s),\n            u = (m = t, c = s, (Math.max(c.maxX, m.maxX) - Math.min(c.minX, m.minX)) * (Math.max(c.maxY, m.maxY) - Math.min(c.minY, m.minY)) - l);\n        u < a ? (a = u, e = l < e ? l : e, h = s) : u === a && l < e && (e = l, h = s);\n      }\n\n      i = h || i.children[0];\n    }\n\n    var m, c;\n    return i;\n  }, r.prototype._insert = function (t, i, n) {\n    var r = n ? t : this.toBBox(t),\n        e = [],\n        a = this._chooseSubtree(r, (this || _global).data, i, e);\n\n    for (a.children.push(t), o(a, r); i >= 0 && e[i].children.length > (this || _global)._maxEntries;) this._split(e, i), i--;\n\n    this._adjustParentBBoxes(r, e, i);\n  }, r.prototype._split = function (t, i) {\n    var n = t[i],\n        r = n.children.length,\n        e = (this || _global)._minEntries;\n\n    this._chooseSplitAxis(n, e, r);\n\n    var h = this._chooseSplitIndex(n, e, r),\n        o = p(n.children.splice(h, n.children.length - h));\n\n    o.height = n.height, o.leaf = n.leaf, a(n, (this || _global).toBBox), a(o, (this || _global).toBBox), i ? t[i - 1].children.push(o) : this._splitRoot(n, o);\n  }, r.prototype._splitRoot = function (t, i) {\n    (this || _global).data = p([t, i]), (this || _global).data.height = t.height + 1, (this || _global).data.leaf = !1, a((this || _global).data, (this || _global).toBBox);\n  }, r.prototype._chooseSplitIndex = function (t, i, n) {\n    for (var r, e, a, o, s, l, u, m = 1 / 0, c = 1 / 0, p = i; p <= n - i; p++) {\n      var d = h(t, 0, p, (this || _global).toBBox),\n          x = h(t, p, n, (this || _global).toBBox),\n          v = (e = d, a = x, o = void 0, s = void 0, l = void 0, u = void 0, o = Math.max(e.minX, a.minX), s = Math.max(e.minY, a.minY), l = Math.min(e.maxX, a.maxX), u = Math.min(e.maxY, a.maxY), Math.max(0, l - o) * Math.max(0, u - s)),\n          M = f(d) + f(x);\n      v < m ? (m = v, r = p, c = M < c ? M : c) : v === m && M < c && (c = M, r = p);\n    }\n\n    return r || n - i;\n  }, r.prototype._chooseSplitAxis = function (t, i, n) {\n    var r = t.leaf ? (this || _global).compareMinX : s,\n        e = t.leaf ? (this || _global).compareMinY : l;\n    this._allDistMargin(t, i, n, r) < this._allDistMargin(t, i, n, e) && t.children.sort(r);\n  }, r.prototype._allDistMargin = function (t, i, n, r) {\n    t.children.sort(r);\n\n    for (var e = (this || _global).toBBox, a = h(t, 0, i, e), s = h(t, n - i, n, e), l = u(a) + u(s), f = i; f < n - i; f++) {\n      var m = t.children[f];\n      o(a, t.leaf ? e(m) : m), l += u(a);\n    }\n\n    for (var c = n - i - 1; c >= i; c--) {\n      var p = t.children[c];\n      o(s, t.leaf ? e(p) : p), l += u(s);\n    }\n\n    return l;\n  }, r.prototype._adjustParentBBoxes = function (t, i, n) {\n    for (var r = n; r >= 0; r--) o(i[r], t);\n  }, r.prototype._condense = function (t) {\n    for (var i = t.length - 1, n = void 0; i >= 0; i--) 0 === t[i].children.length ? i > 0 ? (n = t[i - 1].children).splice(n.indexOf(t[i]), 1) : this.clear() : a(t[i], (this || _global).toBBox);\n  }, r;\n});\nvar exports$1 = exports;\n\nexport default exports$1;\n\n//# sourceMappingURL=npm:rbush@3.0.1!cjs.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @returns {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      const geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              if (!declutterImageWithText[d]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[d] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[d];\n              delete declutterImageWithText[d];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      const renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          renderBuffer\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ration of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n    const displacement = this.getDisplacement();\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport {toSize} from '../size.js';\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] / 2;\n          const height = size[1] / 2;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              0.5,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    0.5,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            size: image.getSize(),\n            opacity: image.getOpacity(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(\n          geometry,\n          style\n        );\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index =\n      (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void=} success Success\n   *      Function called when loading succeeded.\n   * @param {function(): void=} failure Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        if (success !== undefined) {\n          success(features);\n        }\n        source.addFeatures(features);\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addEventListener(\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_\n    );\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        switch (true) {\n          case !this.finishCoordinate_:\n            this.startDrawing_(event.coordinate);\n            if (this.mode_ !== Mode.POINT) {\n              break;\n            }\n          // eslint-disable-next-line no-fallthrough\n          case this.freehand_ ||\n            (this.atFinish_(event.pixel) && this.finishCondition_(event)):\n            this.finishDrawing();\n            break;\n          case !this.freehand_:\n            this.addToDrawing_(event.coordinate);\n            break;\n          default:\n            break;\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.originalEvent.stopPropagation();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number=} opt_angle Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (\n    type === GeometryType.LINE_STRING ||\n    type === GeometryType.MULTI_LINE_STRING\n  ) {\n    mode = Mode.LINE_STRING;\n  } else if (\n    type === GeometryType.POLYGON ||\n    type === GeometryType.MULTI_POLYGON\n  ) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return /** @type {!Mode} */ (mode);\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, features, MapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = MapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const feature = segments[i][0].feature;\n        if (features.indexOf(feature) === -1) {\n          this.featuresBeingModified_.push(feature);\n        }\n      }\n\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYSTART,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (features.indexOf(feature) === -1) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (geometries.indexOf(geometry) === -1) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          // prevent dragging closed linestrings by the connecting node\n          if (\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n                GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    let nodes, hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          geometry = geometry || feature.getGeometry();\n          if (geometry.getType() === GeometryType.POINT) {\n            hitPointGeometry = geometry;\n            const coordinate = geometry.getCoordinates();\n            nodes = [\n              {\n                feature,\n                geometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        this.delta_[0] = vertex[0] - pixelCoordinate[0];\n        this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        if (\n          node.geometry.getType() === GeometryType.CIRCLE &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function (\n      segmentDataMatch\n    ) {\n      if (\n        segmentDataMatch.geometry === geometry &&\n        (depth === undefined ||\n          segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index\n      ) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n          .clone()\n          .transform(userProjection, projection));\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === GeometryType.CIRCLE &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n        .clone()\n        .transform(userProjection, projection));\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (this\n      .featureLayerAssociation_[getUid(feature)]);\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.defaultFeatureProjection = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        opt_this !== undefined ? opt_this : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[\n          objectStack.length - 1\n        ]);\n        const property =\n          opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      opt_this !== undefined ? opt_this : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[\n        objectStack.length - 1\n      ]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI =\n        opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(\n  object,\n  parsersNS,\n  node,\n  objectStack,\n  opt_this\n) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        opt_this !== undefined ? opt_this : this,\n        value,\n        objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          opt_this,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  opt_keys,\n  opt_this\n) {\n  objectStack.push(object);\n  serialize(\n    serializersNS,\n    nodeFactory,\n    values,\n    objectStack,\n    opt_keys,\n    opt_this\n  );\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.XML;\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeatureFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, opt_options) {\n    const features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readFeaturesFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        opt_options\n      );\n    } else {\n      return this.readGeometryFromNode(\n        /** @type {Element} */ (source),\n        opt_options\n      );\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, opt_options) {\n    const node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    const node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, opt_options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, opt_options) {\n    const node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, opt_options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {includes} from '../array.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readNonNegativeInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [opt_options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readNonNegativeInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readNonNegativeInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {import(\"../geom/GeometryLayout.js\").default} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (rteValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (rteValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    const flatCoordinates = /** @type {Array<number>} */ (trkValues[\n      'flatCoordinates'\n    ]);\n    const layoutOptions = /** @type {LayoutOptions} */ (trkValues[\n      'layoutOptions'\n    ]);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    const lineString = /** @type {LineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    const multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    const point = /** @type {Point} */ (transformGeometryWithOptions(\n      geometry,\n      true,\n      options\n    ));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend, includes} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {import(\"../style/IconAnchorUnits\").default} xunits\n * @property {number} y\n * @property {import(\"../style/IconAnchorUnits\").default} yunits\n * @property {import(\"../style/IconOrigin.js\").default} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, opt_options),\n    ]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, opt_options),\n      ]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [opt_options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    let imageSize = imageStyle.getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n      textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return (\n                  type === GeometryType.POINT ||\n                  type === GeometryType.MULTI_POINT\n                );\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            drawName =\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && name.search(/&[^&]+;/) > -1) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(flatCoordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n      ? styleObject['fillStyle']\n      : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    ('textStyle' in styleObject\n      ? styleObject['textStyle']\n      : DEFAULT_TEXT_STYLE);\n  const strokeStyle =\n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n      ? styleObject['strokeStyle']\n      : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type !== GeometryType.POLYGON &&\n                    type !== GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type !== GeometryType.POLYGON &&\n            type !== GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === GeometryType.GEOMETRY_COLLECTION) {\n            return new GeometryCollection(\n              geometry\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POLYGON ||\n                    type === GeometryType.MULTI_POLYGON\n                  );\n                })\n            );\n          } else if (\n            type === GeometryType.POLYGON ||\n            type === GeometryType.MULTI_POLYGON\n          ) {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[\n      objectStack.length - 1\n    ]);\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[\n    objectStack.length - 1\n  ]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: IconAnchorUnits.PIXELS,\n          y: size[1] - anchor[1],\n          yunits: IconAnchorUnits.PIXELS,\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === GeometryType.GEOMETRY_COLLECTION) {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === GeometryType.MULTI_POINT) {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === GeometryType.MULTI_LINE_STRING) {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === GeometryType.MULTI_POLYGON) {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === GeometryType.POINT ||\n          type === GeometryType.LINE_STRING ||\n          type === GeometryType.POLYGON\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_LINE_STRING) {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === GeometryType.MULTI_POLYGON) {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === GeometryType.GEOMETRY_COLLECTION) {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return (\n                    type === GeometryType.POINT ||\n                    type === GeometryType.MULTI_POINT\n                  );\n                }).length;\n            }\n            return (\n              type === GeometryType.POINT || type === GeometryType.MULTI_POINT\n            );\n          }\n        });\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.LINE_STRING ||\n                      type === GeometryType.MULTI_LINE_STRING\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.MULTI_LINE_STRING\n              );\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === GeometryType.GEOMETRY_COLLECTION) {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return (\n                      type === GeometryType.POLYGON ||\n                      type === GeometryType.MULTI_POLYGON\n                    );\n                  }).length;\n              }\n              return (\n                type === GeometryType.POLYGON ||\n                type === GeometryType.MULTI_POLYGON\n              );\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      imageSmoothing: options.imageSmoothing,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    requestJSONP(\n      url,\n      this.handleImageryMetadataResponse.bind(this),\n      undefined,\n      'jsonp'\n    );\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(\n                tileCoord[0],\n                tileCoord[1],\n                tileCoord[2],\n                quadKeyTileCoord\n              );\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions(\n        function (frameState) {\n          const attributions = [];\n          const viewState = frameState.viewState;\n          const tileGrid = this.getTileGrid();\n          const z = tileGrid.getZForResolution(\n            viewState.resolution,\n            this.zDirection\n          );\n          const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n            viewState.center,\n            z\n          );\n          const zoom = tileCoord[0];\n          resource.imageryProviders.map(function (imageryProvider) {\n            let intersecting = false;\n            const coverageAreas = imageryProvider.coverageAreas;\n            for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n              const coverageArea = coverageAreas[i];\n              if (\n                zoom >= coverageArea.zoomMin &&\n                zoom <= coverageArea.zoomMax\n              ) {\n                const bbox = coverageArea.bbox;\n                const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                const extent = applyTransform(epsg4326Extent, transform);\n                if (intersects(extent, frameState.extent)) {\n                  intersecting = true;\n                  break;\n                }\n              }\n            }\n            if (intersecting) {\n              attributions.push(imageryProvider.attribution);\n            }\n          });\n\n          attributions.push(TOS_ATTRIBUTION);\n          return attributions;\n        }.bind(this)\n      );\n    }\n\n    this.setState(SourceState.READY);\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.indexOf('?') == -1 ? '?' : '&') +\n    (opt_callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options=} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : /** @type {Options} */ ({});\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // substract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n\n  const extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (projection.getExtent() === null) {\n    projection.setExtent(extent);\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n"],"names":["BaseEvent","[object Object]","type","this","propagationStopped","target","Disposable","disposed","disposeInternal","numberSafeCompareFunction","a","b","includes","arr","obj","indexOf","linearFindNearest","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","assign","Object","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","Target","opt_target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","listener","listeners","listenersForType","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","call","pr","removeEventListener","undefined","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener","apply","eventsKey","addEventListener","listenOnce","unlistenByKey","Observable","EventTarget","revision_","dispatchEvent","EventType","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","ol_uid","String","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","value","eventType","getChangeEventType","ObjectEventType","opt_silent","notify","set","changeEventTypeCache","AssertionError","code","message","name","assert","assertion","errorCode","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","get","changed","handleGeometryChange_","opt_style","styles","createStyleFunction","id","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","c","d","e","f","toString","join","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","applyTransform","transformFn","opt_stops","width","height","xs","ys","l","_boundingExtentXYs","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","squaredDistance","toRadians","angleInDegrees","PI","modulo","r","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromString","cache","cacheSize","s","g","exec","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","split","map","Number","normalize","fromStringInternal_","asArray","getKey","src","crossOrigin","shared","cache_","cacheSize_","maxCacheSize_","canExpireCache","iconImage","hasListener","maxCacheSize","expire","BaseLayer","options","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","opt_array","opt_states","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","array","states","getLayerState","getSource","getState","SourceState","handleSourceChange_","pixel","getFeatures","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","inView","viewState","zoom","padNumber","number","opt_precision","numberString","toFixed","decimal","closestOnSegment","segment","start","along","coordinate1","coordinate2","rotate","cosAngle","sinAngle","coord1","coord2","distance","sqrt","wrapX","projection","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","getWorldsAway","MapRenderer","map_","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","forEachFeatureAtCoordinate","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","hasRenderer","getWrapX","order","forEach","m","distanceSq","sort","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","prototype","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","outerWidth","element","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","defaultLineDash","defaultPadding","checkedFonts","setSize","console","warn","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","font","clearInterval","setInterval","measureTextHeight","div","metrics","measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","translate","drawImageOrLabel","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","getMap","display","calculateMatrices2D","dispatchRenderEvent","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","scheduleExpireIconCache","getDataAtPixel","Property","CollectionEvent","opt_element","opt_index","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","elem","CollectionEventType","removeAt","insertAt","prev","opt_except","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","getArray","handleLayerChange_","collectionEvent","getLayersArray","pos","getLayerStatesArray","ownLayerState","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","pointerId","updateActivePointers_","isMouseActionButton_","emulateClick_","button","doc","getOwnerDocument","handlePointerMove_","handlePointerUp_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","DROP","TileQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","isKeyQueued","count","startIndex","lIndex","getLeftChildIndex_","rIndex","getRightChildIndex_","smallerChildIndex","parentIndex","getParentIndex_","heapify_","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","enqueue","tile","hifi","TileState","tileKey","maxTotalLoading","maxNewLoads","newLoads","getCount","dequeue","load","Units","METERS_PER_UNIT","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","tileGrid","func","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","transforms","add","destination","sourceCode","getCode","destinationCode","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","getMetersPerUnit","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","easeIn","pow","easeOut","inAndOut","linear","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","opt_dest","dest","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","memoizeOne","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","getRevision","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","closestPointXY","computeExtent","returnOrUpdate","opt_sy","opt_anchor","tolerance","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","SimpleGeometry","layout","GeometryLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getFlatCoordinates","getStrideForLayout","opt_layout","nesting","getLayoutForStride","getStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","linearRingArea","GeometryType","setLayout","Point","applyProperties","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","point1","point2","ret","intersectsLineString","coordinatesExtent","forEachSegment","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","polygon","getOrientedFlatCoordinates","linearRingsArea","flatCenter","getFlatInteriorPoint","fromExtent","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","opt_rotation","opt_size","ViewProperty","opt_hints","calculateExtentInternal","getZoomForResolution","getUpdatedOptions_","enabled","getResolutionForExtentInternal","opt_power","getConstrainedResolution","logPower","reducedSize","getViewportSizeMinusPadding_","calculateCenterOn","nearest","baseLevel","geometryOrExtent","polygonFromExtent","getType","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOnInternal","centerShift","shiftedCenter","deltaCoordinates","setCenter","adjustResolutionInternal","isMoving","getInteracting","newResolution","adjustResolution","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","calculateCenterShift","cancelAnimations","opt_duration","opt_resolutionDirection","endInteractionInternal","opt_targetResolution","targetZoom","opt_direction","targetRes","returnValue","coordinatesEqual","num","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","getControls","getInteractions","getLayerGroup","overlay","getOverlays","setTarget","getCoordinateFromPixelInternal","features","forEachFeatureAtPixel","forEachLayerAtPixel","hasFeatureAtCoordinate","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getView","loading","viewCoordinate","getPixelFromCoordinateInternal","getTargetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","tileQueue","hints","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","getLoading","targetElement","dispose","updateSize","updateViewportSize_","handleViewPropertyChanged_","handleFontsChanged","remove","getSize","previousFrameState","hasArea","getHints","declutterTree","usedTiles","MapEventType","handlePostRender","computedStyle","parseFloat","setViewportSize","Control","target_","listenerKeys","getOverlayContainerStopEvent","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","collectSourceAttributions_","handleToggle_","classList","toggle","updateElement_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","getConstrainedZoom","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","updateHTML_","viewport","handleMouseMove","handleMouseOut","format","html","getCoordinateFormat","Overlay","insertFirst","stopEvent","autoPan","autoPanAnimation","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","OverlayPositioning","setPosition","getElement","updatePixelPosition","getOverlayContainer","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","getPosition","isRendered","setVisible","getPixelFromCoordinate","mapSize","updateRenderedPosition","getOffset","getPositioning","posX","posY","msTransform","LEADING_DIGITS","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","dpi_","dpi","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","scaleBarText","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Interaction","setActive","InteractionProperty","active","zoomByDelta","DoubleClickZoom","delta_","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","adjustCenterInternal","getAngle","centerpx","endInteraction","DragRotate","lastAngle_","getConstraints","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","px","createOrUpdateGeometry","render_","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","setPixels","completeBox","DragZoom","out_","out","mapExtent","boxPixelExtent","scaleFromCenter","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Circle","setCenterAndRadius","circle","getRadius","getRadiusSquared_","intersectsCoordinate","interpolatePoint","o","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","lineString","opt_extrapolate","getCoordinateAt","MultiLineString","getLayout","lineStrings","multiLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","midpoints","douglasPeuckerArray","intersectsLineStringArray","MultiPoint","multiPoint","points","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","getEnds","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","interiorPoints","getInteriorPointsOfMultiArray","getFlatInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","_global","globalThis","exports$1","u","p","_maxEntries","_minEntries","leaf","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","asColorLike","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius2","getStroke","setOpacity","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","ImageState","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","getImage","drawHitDetectionCanvas_","CircleStyle","Fill","color_","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","Style","geometryFunction_","defaultGeometryFunction","image_","image","renderer","text_","zIndex_","getText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","concat","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","RBush","renderOrder","styleFunction","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","imageStyle","opt_declutterImageWithText","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","dashArray","dash","getBufferedMaxExtent","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","builderEnds","builderEnd","appendFlatLineCoordinates","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","appendFlatPointCoordinates","endGeometry","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasPolygonBuilder","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","reverseHitDetectionInstructions","finish","updateFillStyle","updateStrokeStyle","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","opt_sharedData","getAnchor","hitDetectionImage","getHitDetectionImage","origin","getOrigin","getPixelRatio","getScaleArray","drawFlatCoordinates_","lastStroke","Text","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","TextPlacement","geometryWidths","getFlatMidpoint","getFlatMidpoints","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","p0","p1","p2","p3","textAlign","flatEnd","flatOffset","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","tiles","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","renderIfReadyAndVisible","imageState","getLayer","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","moveTo","clip","inverted","dispatchRenderEvent_","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","test","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","setStrokeStyle_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","contextScale","imageOrLabel","dimensions","strokePadding","replayTextBackground_","repeatSize","createLabel","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","declutterImageWithText","labelWithAnchor","drawLabelWithPointPlacement_","widthIndex","calculateImageOrLabelDimensions_","imageArgs","imageDeclutterBox","replayImageOrLabel_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute_","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","hitExtent","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","featureCallback","imageData","idx","zs","executor","executeHitDetection","opt_builderTypes","builderTypes","execute","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","localTransform","alpha","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","close","moveToLineTo_","simpleGeometry","transformGeom2D","drawText_","setImageStyle","setTextStyle","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawCircle","getGeometryFunction","drawGeometry","geometries","getGeometriesArray","simplifyTransformed","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","listenImage","loadHandler","errorHandler","img","promise","listening","unlisten","then","catch","taintedTestContext","IconImage","unlisten_","imageState_","src_","tainted_","unlistenImage_","dispatchChangeEvent_","replaceColor_","isTainted_","fillRect","handleImageError_","handleImageLoad_","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","getSrc","getImageSize","getImageState","iconImageSize","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","getBuilder","textReplay","drawText","lineStringReplay","polygonReplay","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","drawCustom","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","useContainer","executorGroup","vectorSource","endWorld","world","getRenderTransform","renderWorlds","makeScale","transformToString","preRender","clipped","intersectsExtent","clipUnrotated","postRender","Promise","resolve","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","originalStyle","setColor","setText","imgContext","setImage","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","item","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","declutterBuilderGroup","getDeclutter","loadFeatures","getSquaredRenderTolerance","dirty","userTransform","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","opt_maxEntries","rbush_","RBush_","items_","extents","items","uid","bbox","forEach_","getAll","getInExtent","rbush","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","attributionLike","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","opt_feature","opt_features","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","addFeature","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","forEachInExtent","forEachFeatureAtCoordinateDirect","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","refresh","removed","setLoader","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","move","addToDrawing_","getPointerCount","startDrawing_","atFinish_","finishDrawing","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","ring","getLinearRing","sketchLineGeom","createOrUpdateCustomSketchLine_","sketchFeature","abortDrawing_","getCoordinates","newDrawing","ending","sketchFeatures","overlaySource","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","writer","handlePointerAtPixel_","segments","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","removeFeature_","segmentData","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","vertexFeature","removePoint","willModifyFeatures_","vertex","dragSegment","coordinateDistance","setRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","pixelCoordinate","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestOnSegmentData","insertVertex_","opt_coordinate","sortByDistance","projectedDistanceToSegmentDataSquared","nodes","hitPointGeometry","bufferExtent","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","squaredDistanceToSegment","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","restorePreviousStyle_","applySelectedStyle_","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","Map","defaultControls","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","defaultInteractions","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","getGeometriesArrayRecursive","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","unlistenGeometriesChange_","clonedGeometries","FeatureFormat","defaultFeatureProjection","setWorldExtent","adaptOptions","transformGeometryWithOptions","write","transformed","equivalentProjection","decimals","JSONFeature","readFeatureFromObject","getObject","getReadOptions","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","readGeometry","setId","geoJSONFeatures","crs","writeGeometry","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","opt_property","localName","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","xmlSerializer_","document_","implementation","createDocument","XMLFeature","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","string","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","getLineStrings","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX","readExtensions_","readExtensions","extensionsNode","featureReader","handleReadExtensions_","gpx","setAttributeNS","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","getAttribute","hasZ","hasM","applyLayoutOptions","href","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","defaultIconUrlFunction","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","drawName","multiGeometryPoints","featureStyle","findStyle","styleValue","nameStyle","foundStyle","textOffset","setFont","setScale","setFill","setStroke","setOffsetX","setOffsetY","setTextAlign","createNameStyleFunction","createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readNameFromDocument","readNameFromNode","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","readColor","hexColor","readFlatCoordinates","re","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","flatLinearRing","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","getPolygons","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","getLinearRings","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","TileProperty","TileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","tileState","getUseInterimTilesOnError","getTile","getPreload","setState","isDrawableTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","createTransformString","getContextOptions","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","Tile","interimTile","transition_","transitionStarts_","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","step","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","reproject_","opt_tileCoord","getKeyZXY","hash","TileCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","entry","value_","key_","newer","older","peekLast","release","fromKey","peekFirstKey","tmpTileCoord","TileGrid","opt_func","opt_strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","fullTileRanges","getForProjection","getDefaultTileGrid","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","setDefaultTileGrid","createXYZ","xyzOptions","gridOptions","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","containsKey","getResolutions","scaleSize","opt_projection","getFullTileRange","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTileUrlFunctions","tileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getPrototypeOf","TileEventType","pruneExceptNewestZ","setKey","setTileUrlFunction","templates","createFromTemplates","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","newTile","getTileInternal","refreshInterimChain","createTile_","tilegrid","proj","imageTile","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","requestJSONP","handleImageryMetadataResponse","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","setAttributions","getTileGrid","imageryProvider","intersecting","coverageAreas","coverageArea","appendParams","uri","params","keyParams","encodeURIComponent","qs","TileWMS","transparent","params_","v13_","serverType_","tmpExtent_","updateV13_","getKeyForParams_","projectionObj","sourceProjectionObj","tileExtent","bufferSize","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","LAYERS","pixelSize","WMSServerType","getAxisOrientation","version","s1","s2","n1","n2","compareVersions","WMTSTileGrid","matrixIds_","matrixIds","WMTS","requestEncoding","WMTSRequestEncoding","version_","dimensions_","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","getMatrixId","TileCol","TileRow","XYZ"],"mappings":"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"}