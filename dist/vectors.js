import{Circle as t,Fill as e,GeoJSON as o,GPX as r,KML as i,Stroke as s,Style as n,transformExtent as a,VectorLayer as l,VectorSource as c}from"./deps.js";import f from"./olMap.js";import g from"./registry/components/layerswitcher.js";import{$ as d}from"./utils.js";import m from"./rasters.js";import u from"./mongo.js";const y=f.get(),p={normal:{stroke:{color:"rgba(0, 0, 255, 0.6)",width:3},fill:{color:"rgba(255, 255, 255, 0.6)"},image:{radius:7,fillColor:"#ffcc33"}},highlight:{stroke:{color:"rgba(255, 0, 0, 0.6)",width:3},fill:{color:"rgba(255, 0, 0, 0.1)"},image:{radius:7,fillColor:"#ffcc33"}}};function h(t){return{GeoJSON:new o,GPX:new r,KML:new i,mongo:u}[t]}function b(){return y.getLayers().item(1).get("layers")}function x(t){const e=document.getElementById(t.target.htmlFor)||t.target;this.getLayers().item(1).get("layers").getArray().filter((function(t){return t.getProperties().id==e.value}))[0].set("visible",e.checked)}function w(t){t.vectors.forEach((e=>{let o,r=e.url;const i={featureProjection:y.get("view").getProjection()},s={attributions:e.attribution||""},n=r||e.filename;if(n&&!e.format){const t={geojson:"GeoJSON",gpx:"GPX",kml:"KML"},e=n.substring(n.lastIndexOf(".")+1);o=t[e]}o=e.format||o,o&&(s.format=h(o)),e.file?s.features=s.format.readFeatures(e.file,i):r&&(e.strategy&&"bbox"==e.strategy&&(s.strategy=(t,e)=>[t]),s.loader=(t,n,l)=>{if(e.strategy&&"bbox"==e.strategy){const o=a(t,l,"EPSG:4326");r=e.url+[[o[0].toFixed(6),o[1].toFixed(6)],[o[2].toFixed(6),o[1].toFixed(6)],[o[2].toFixed(6),o[3].toFixed(6)],[o[0].toFixed(6),o[3].toFixed(6)],[o[0].toFixed(6),o[1].toFixed(6)]].join("],[")+"]]]}}}}"}fetch(r).then((t=>"GeoJSON"==o||"mongo"==o?t.json():t.text())).then((t=>{const o=s.format.readFeatures(t,i);b().getArray().filter((function(t){return t.getProperties().id==e.id}))[0].get("source").addFeatures(o)})).catch((t=>{console.log(t),alert("Unable to load vector file")}))});const f=new c(s);!0!==e.add||!r||e.strategy&&"bbox"==e.strategy||f.once("change",(t=>{y.get("view").fit(t.target.getExtent())}));const m={source:f,id:e.id||r},u={};for(const t in p.normal)u[t]=p.normal[t];if(e.style)for(const t in e.style)u[t]=e.style[t];p[m.id]=u,m.style=t=>F(m.id,t);const w=new l(m);b().push(w),!0===e.add&&e.file&&y.get("view").fit(f.getExtent()),e.noDisplay&&w.set("visible",!1);const v=g.addVectorDiv(e);if(v[0].addEventListener("click",x.bind(y)),v[1]){const e=t.components||[];-1==e.indexOf("popup")&&(d("#featuredisplayoption").style.display="block"),-1==e.indexOf("tooltip")&&(d("#tooltipoption").style.display="block")}}))}function F(o,r){const i={width:p[o].stroke.width,color:p[o].stroke.color,lineDash:p[o].stroke.lineDash};["color","width","lineDash"].forEach((t=>{if(Array.isArray(i[t])){const e=r.get(i[t][0]);"object"==typeof i[t][1]?i[t]=i[t][1][e]:i[t]=e==i[t][1]?i[t][2]:i[t][3]}}));let a=p[o].image.fillColor;return Array.isArray(a)&&(a=r.get(a[0])==a[1]?a[2]:a[3]),new n({stroke:new s(i),fill:new e(p[o].fill),image:new t({radius:p[o].image.radius,fill:new e({color:a})})})}export default{addInitial:function(t){w(t),t.center||t.zoom?t.rasters&&m.makeActiveLayerVisible():function(){const t=b().getArray(),e=[1/0,1/0,-1/0,-1/0];let o=0;const r=r=>{var i,s;i=e,(s=r.target.getExtent())[0]<i[0]&&(i[0]=s[0]),s[2]>i[2]&&(i[2]=s[2]),s[1]<i[1]&&(i[1]=s[1]),s[3]>i[3]&&(i[3]=s[3]),o++,o==t.length&&(y.get("view").fit(e),m.makeActiveLayerVisible(),d("#status").style.display="none")};t.forEach((t=>{t.get("source").once("change",r)}))}(),t.rasters||f.use4326View()},add:w,getFormat:h,getLayers:b,getStyle:F};